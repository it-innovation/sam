/* This file was generated by SableCC (http://www.sablecc.org/). */

package eu.serscis.sam.parser;

import eu.serscis.sam.lexer.*;
import eu.serscis.sam.node.*;
import eu.serscis.sam.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AProgram */
		    {
			ArrayList list = new0();
			push(goTo(0), list, false);
		    }
		    break;
                    case 1: /* reduce ABehaviourToplevel */
		    {
			ArrayList list = new1();
			push(goTo(1), list, false);
		    }
		    break;
                    case 2: /* reduce AConfigToplevel */
		    {
			ArrayList list = new2();
			push(goTo(1), list, false);
		    }
		    break;
                    case 3: /* reduce AImportToplevel */
		    {
			ArrayList list = new3();
			push(goTo(1), list, false);
		    }
		    break;
                    case 4: /* reduce AFactToplevel */
		    {
			ArrayList list = new4();
			push(goTo(1), list, false);
		    }
		    break;
                    case 5: /* reduce ARuleToplevel */
		    {
			ArrayList list = new5();
			push(goTo(1), list, false);
		    }
		    break;
                    case 6: /* reduce ADeclareToplevel */
		    {
			ArrayList list = new6();
			push(goTo(1), list, false);
		    }
		    break;
                    case 7: /* reduce AAssertToplevel */
		    {
			ArrayList list = new7();
			push(goTo(1), list, false);
		    }
		    break;
                    case 8: /* reduce AQueryToplevel */
		    {
			ArrayList list = new8();
			push(goTo(1), list, false);
		    }
		    break;
                    case 9: /* reduce AImport */
		    {
			ArrayList list = new9();
			push(goTo(2), list, false);
		    }
		    break;
                    case 10: /* reduce ADeclare */
		    {
			ArrayList list = new10();
			push(goTo(3), list, false);
		    }
		    break;
                    case 11: /* reduce AFact */
		    {
			ArrayList list = new11();
			push(goTo(4), list, false);
		    }
		    break;
                    case 12: /* reduce ARule */
		    {
			ArrayList list = new12();
			push(goTo(5), list, false);
		    }
		    break;
                    case 13: /* reduce AAliterals1Literals */
		    {
			ArrayList list = new13();
			push(goTo(6), list, false);
		    }
		    break;
                    case 14: /* reduce AAliterals2Literals */
		    {
			ArrayList list = new14();
			push(goTo(6), list, false);
		    }
		    break;
                    case 15: /* reduce ALiteralTail */
		    {
			ArrayList list = new15();
			push(goTo(7), list, false);
		    }
		    break;
                    case 16: /* reduce AEqBinop */
		    {
			ArrayList list = new16();
			push(goTo(8), list, false);
		    }
		    break;
                    case 17: /* reduce ANeqBinop */
		    {
			ArrayList list = new17();
			push(goTo(8), list, false);
		    }
		    break;
                    case 18: /* reduce APositiveLiteral */
		    {
			ArrayList list = new18();
			push(goTo(9), list, false);
		    }
		    break;
                    case 19: /* reduce ANegativeLiteral */
		    {
			ArrayList list = new19();
			push(goTo(9), list, false);
		    }
		    break;
                    case 20: /* reduce ANullaryAtom */
		    {
			ArrayList list = new20();
			push(goTo(10), list, false);
		    }
		    break;
                    case 21: /* reduce ANormalAtom */
		    {
			ArrayList list = new21();
			push(goTo(10), list, false);
		    }
		    break;
                    case 22: /* reduce ABuiltinAtom */
		    {
			ArrayList list = new22();
			push(goTo(10), list, false);
		    }
		    break;
                    case 23: /* reduce AAterms1Terms */
		    {
			ArrayList list = new23();
			push(goTo(11), list, false);
		    }
		    break;
                    case 24: /* reduce AAterms2Terms */
		    {
			ArrayList list = new24();
			push(goTo(11), list, false);
		    }
		    break;
                    case 25: /* reduce ATermTail */
		    {
			ArrayList list = new25();
			push(goTo(12), list, false);
		    }
		    break;
                    case 26: /* reduce AVarTerm */
		    {
			ArrayList list = new26();
			push(goTo(13), list, false);
		    }
		    break;
                    case 27: /* reduce AJavavarTerm */
		    {
			ArrayList list = new27();
			push(goTo(13), list, false);
		    }
		    break;
                    case 28: /* reduce AStringTerm */
		    {
			ArrayList list = new28();
			push(goTo(13), list, false);
		    }
		    break;
                    case 29: /* reduce AIntTerm */
		    {
			ArrayList list = new29();
			push(goTo(13), list, false);
		    }
		    break;
                    case 30: /* reduce ABoolTerm */
		    {
			ArrayList list = new30();
			push(goTo(13), list, false);
		    }
		    break;
                    case 31: /* reduce ACompositeTerm */
		    {
			ArrayList list = new31();
			push(goTo(13), list, false);
		    }
		    break;
                    case 32: /* reduce AQuery */
		    {
			ArrayList list = new32();
			push(goTo(14), list, false);
		    }
		    break;
                    case 33: /* reduce AAssert */
		    {
			ArrayList list = new33();
			push(goTo(15), list, false);
		    }
		    break;
                    case 34: /* reduce ANamedPattern */
		    {
			ArrayList list = new34();
			push(goTo(16), list, false);
		    }
		    break;
                    case 35: /* reduce AAnyPattern */
		    {
			ArrayList list = new35();
			push(goTo(16), list, false);
		    }
		    break;
                    case 36: /* reduce AConfig */
		    {
			ArrayList list = new36();
			push(goTo(17), list, false);
		    }
		    break;
                    case 37: /* reduce AAbehaviour1Behaviour */
		    {
			ArrayList list = new37();
			push(goTo(18), list, false);
		    }
		    break;
                    case 38: /* reduce AAbehaviour2Behaviour */
		    {
			ArrayList list = new38();
			push(goTo(18), list, false);
		    }
		    break;
                    case 39: /* reduce AExtends */
		    {
			ArrayList list = new39();
			push(goTo(19), list, false);
		    }
		    break;
                    case 40: /* reduce AAclassbody1ClassBody */
		    {
			ArrayList list = new40();
			push(goTo(20), list, false);
		    }
		    break;
                    case 41: /* reduce AAclassbody2ClassBody */
		    {
			ArrayList list = new41();
			push(goTo(20), list, false);
		    }
		    break;
                    case 42: /* reduce AAclassbody3ClassBody */
		    {
			ArrayList list = new42();
			push(goTo(20), list, false);
		    }
		    break;
                    case 43: /* reduce AAclassbody4ClassBody */
		    {
			ArrayList list = new43();
			push(goTo(20), list, false);
		    }
		    break;
                    case 44: /* reduce AAconfigbody1ConfigBody */
		    {
			ArrayList list = new44();
			push(goTo(21), list, false);
		    }
		    break;
                    case 45: /* reduce AAconfigbody2ConfigBody */
		    {
			ArrayList list = new45();
			push(goTo(21), list, false);
		    }
		    break;
                    case 46: /* reduce AField */
		    {
			ArrayList list = new46();
			push(goTo(22), list, false);
		    }
		    break;
                    case 47: /* reduce AConfigField */
		    {
			ArrayList list = new47();
			push(goTo(23), list, false);
		    }
		    break;
                    case 48: /* reduce AType */
		    {
			ArrayList list = new48();
			push(goTo(24), list, false);
		    }
		    break;
                    case 49: /* reduce ANoargsAnnotation */
		    {
			ArrayList list = new49();
			push(goTo(25), list, false);
		    }
		    break;
                    case 50: /* reduce AAargsannotation1Annotation */
		    {
			ArrayList list = new50();
			push(goTo(25), list, false);
		    }
		    break;
                    case 51: /* reduce AAargsannotation2Annotation */
		    {
			ArrayList list = new51();
			push(goTo(25), list, false);
		    }
		    break;
                    case 52: /* reduce AAmethod1Method */
		    {
			ArrayList list = new52();
			push(goTo(26), list, false);
		    }
		    break;
                    case 53: /* reduce AAmethod2Method */
		    {
			ArrayList list = new53();
			push(goTo(26), list, false);
		    }
		    break;
                    case 54: /* reduce AAmethod3Method */
		    {
			ArrayList list = new54();
			push(goTo(26), list, false);
		    }
		    break;
                    case 55: /* reduce AAmethod4Method */
		    {
			ArrayList list = new55();
			push(goTo(26), list, false);
		    }
		    break;
                    case 56: /* reduce AAmethod5Method */
		    {
			ArrayList list = new56();
			push(goTo(26), list, false);
		    }
		    break;
                    case 57: /* reduce AAmethod6Method */
		    {
			ArrayList list = new57();
			push(goTo(26), list, false);
		    }
		    break;
                    case 58: /* reduce AAmethod7Method */
		    {
			ArrayList list = new58();
			push(goTo(26), list, false);
		    }
		    break;
                    case 59: /* reduce AAmethod8Method */
		    {
			ArrayList list = new59();
			push(goTo(26), list, false);
		    }
		    break;
                    case 60: /* reduce AAmethod9Method */
		    {
			ArrayList list = new60();
			push(goTo(26), list, false);
		    }
		    break;
                    case 61: /* reduce AAmethod10Method */
		    {
			ArrayList list = new61();
			push(goTo(26), list, false);
		    }
		    break;
                    case 62: /* reduce AAmethod11Method */
		    {
			ArrayList list = new62();
			push(goTo(26), list, false);
		    }
		    break;
                    case 63: /* reduce AAmethod12Method */
		    {
			ArrayList list = new63();
			push(goTo(26), list, false);
		    }
		    break;
                    case 64: /* reduce AAmethod13Method */
		    {
			ArrayList list = new64();
			push(goTo(26), list, false);
		    }
		    break;
                    case 65: /* reduce AAmethod14Method */
		    {
			ArrayList list = new65();
			push(goTo(26), list, false);
		    }
		    break;
                    case 66: /* reduce AAmethod15Method */
		    {
			ArrayList list = new66();
			push(goTo(26), list, false);
		    }
		    break;
                    case 67: /* reduce AAmethod16Method */
		    {
			ArrayList list = new67();
			push(goTo(26), list, false);
		    }
		    break;
                    case 68: /* reduce AAcode1Code */
		    {
			ArrayList list = new68();
			push(goTo(27), list, false);
		    }
		    break;
                    case 69: /* reduce AAcode2Code */
		    {
			ArrayList list = new69();
			push(goTo(27), list, false);
		    }
		    break;
                    case 70: /* reduce AAassign1Assign */
		    {
			ArrayList list = new70();
			push(goTo(28), list, false);
		    }
		    break;
                    case 71: /* reduce AAassign2Assign */
		    {
			ArrayList list = new71();
			push(goTo(28), list, false);
		    }
		    break;
                    case 72: /* reduce AAassignstatement1Statement */
		    {
			ArrayList list = new72();
			push(goTo(29), list, false);
		    }
		    break;
                    case 73: /* reduce AAassignstatement2Statement */
		    {
			ArrayList list = new73();
			push(goTo(29), list, false);
		    }
		    break;
                    case 74: /* reduce AAssignDlStatement */
		    {
			ArrayList list = new74();
			push(goTo(29), list, false);
		    }
		    break;
                    case 75: /* reduce ADeclStatement */
		    {
			ArrayList list = new75();
			push(goTo(29), list, false);
		    }
		    break;
                    case 76: /* reduce AAtrystatement1Statement */
		    {
			ArrayList list = new76();
			push(goTo(29), list, false);
		    }
		    break;
                    case 77: /* reduce AAtrystatement2Statement */
		    {
			ArrayList list = new77();
			push(goTo(29), list, false);
		    }
		    break;
                    case 78: /* reduce AAtrystatement3Statement */
		    {
			ArrayList list = new78();
			push(goTo(29), list, false);
		    }
		    break;
                    case 79: /* reduce AAtrystatement4Statement */
		    {
			ArrayList list = new79();
			push(goTo(29), list, false);
		    }
		    break;
                    case 80: /* reduce AThrowStatement */
		    {
			ArrayList list = new80();
			push(goTo(29), list, false);
		    }
		    break;
                    case 81: /* reduce AReturnStatement */
		    {
			ArrayList list = new81();
			push(goTo(29), list, false);
		    }
		    break;
                    case 82: /* reduce AAcatchblock1CatchBlock */
		    {
			ArrayList list = new82();
			push(goTo(30), list, false);
		    }
		    break;
                    case 83: /* reduce AAcatchblock2CatchBlock */
		    {
			ArrayList list = new83();
			push(goTo(30), list, false);
		    }
		    break;
                    case 84: /* reduce AAnewexpr1Expr */
		    {
			ArrayList list = new84();
			push(goTo(31), list, false);
		    }
		    break;
                    case 85: /* reduce AAnewexpr2Expr */
		    {
			ArrayList list = new85();
			push(goTo(31), list, false);
		    }
		    break;
                    case 86: /* reduce AAnewexpr3Expr */
		    {
			ArrayList list = new86();
			push(goTo(31), list, false);
		    }
		    break;
                    case 87: /* reduce AAnewexpr4Expr */
		    {
			ArrayList list = new87();
			push(goTo(31), list, false);
		    }
		    break;
                    case 88: /* reduce AAcallexpr1Expr */
		    {
			ArrayList list = new88();
			push(goTo(31), list, false);
		    }
		    break;
                    case 89: /* reduce AAcallexpr2Expr */
		    {
			ArrayList list = new89();
			push(goTo(31), list, false);
		    }
		    break;
                    case 90: /* reduce AAcallexpr3Expr */
		    {
			ArrayList list = new90();
			push(goTo(31), list, false);
		    }
		    break;
                    case 91: /* reduce AAcallexpr4Expr */
		    {
			ArrayList list = new91();
			push(goTo(31), list, false);
		    }
		    break;
                    case 92: /* reduce AStringExpr */
		    {
			ArrayList list = new92();
			push(goTo(31), list, false);
		    }
		    break;
                    case 93: /* reduce ACopyExpr */
		    {
			ArrayList list = new93();
			push(goTo(31), list, false);
		    }
		    break;
                    case 94: /* reduce AAstringargs1StringArgs */
		    {
			ArrayList list = new94();
			push(goTo(32), list, false);
		    }
		    break;
                    case 95: /* reduce AAstringargs2StringArgs */
		    {
			ArrayList list = new95();
			push(goTo(32), list, false);
		    }
		    break;
                    case 96: /* reduce AStringArgsTail */
		    {
			ArrayList list = new96();
			push(goTo(33), list, false);
		    }
		    break;
                    case 97: /* reduce AAargs1Args */
		    {
			ArrayList list = new97();
			push(goTo(34), list, false);
		    }
		    break;
                    case 98: /* reduce AAargs2Args */
		    {
			ArrayList list = new98();
			push(goTo(34), list, false);
		    }
		    break;
                    case 99: /* reduce AArgsTail */
		    {
			ArrayList list = new99();
			push(goTo(35), list, false);
		    }
		    break;
                    case 100: /* reduce AParam */
		    {
			ArrayList list = new100();
			push(goTo(36), list, false);
		    }
		    break;
                    case 101: /* reduce AAparams1Params */
		    {
			ArrayList list = new101();
			push(goTo(37), list, false);
		    }
		    break;
                    case 102: /* reduce AAparams2Params */
		    {
			ArrayList list = new102();
			push(goTo(37), list, false);
		    }
		    break;
                    case 103: /* reduce AParamsTail */
		    {
			ArrayList list = new103();
			push(goTo(38), list, false);
		    }
		    break;
                    case 104: /* reduce AAnamedblock1Namedblock */
		    {
			ArrayList list = new104();
			push(goTo(39), list, false);
		    }
		    break;
                    case 105: /* reduce AAnamedblock2Namedblock */
		    {
			ArrayList list = new105();
			push(goTo(39), list, false);
		    }
		    break;
                    case 106: /* reduce ATerminal$Toplevel */
		    {
			ArrayList list = new106();
			push(goTo(40), list, true);
		    }
		    break;
                    case 107: /* reduce ANonTerminal$Toplevel */
		    {
			ArrayList list = new107();
			push(goTo(40), list, true);
		    }
		    break;
                    case 108: /* reduce ATerminal$LiteralTail */
		    {
			ArrayList list = new108();
			push(goTo(41), list, true);
		    }
		    break;
                    case 109: /* reduce ANonTerminal$LiteralTail */
		    {
			ArrayList list = new109();
			push(goTo(41), list, true);
		    }
		    break;
                    case 110: /* reduce ATerminal$TermTail */
		    {
			ArrayList list = new110();
			push(goTo(42), list, true);
		    }
		    break;
                    case 111: /* reduce ANonTerminal$TermTail */
		    {
			ArrayList list = new111();
			push(goTo(42), list, true);
		    }
		    break;
                    case 112: /* reduce ATerminal$Field */
		    {
			ArrayList list = new112();
			push(goTo(43), list, true);
		    }
		    break;
                    case 113: /* reduce ANonTerminal$Field */
		    {
			ArrayList list = new113();
			push(goTo(43), list, true);
		    }
		    break;
                    case 114: /* reduce ATerminal$Method */
		    {
			ArrayList list = new114();
			push(goTo(44), list, true);
		    }
		    break;
                    case 115: /* reduce ANonTerminal$Method */
		    {
			ArrayList list = new115();
			push(goTo(44), list, true);
		    }
		    break;
                    case 116: /* reduce ATerminal$Namedblock */
		    {
			ArrayList list = new116();
			push(goTo(45), list, true);
		    }
		    break;
                    case 117: /* reduce ANonTerminal$Namedblock */
		    {
			ArrayList list = new117();
			push(goTo(45), list, true);
		    }
		    break;
                    case 118: /* reduce ATerminal$ConfigField */
		    {
			ArrayList list = new118();
			push(goTo(46), list, true);
		    }
		    break;
                    case 119: /* reduce ANonTerminal$ConfigField */
		    {
			ArrayList list = new119();
			push(goTo(46), list, true);
		    }
		    break;
                    case 120: /* reduce ATerminal$Annotation */
		    {
			ArrayList list = new120();
			push(goTo(47), list, true);
		    }
		    break;
                    case 121: /* reduce ANonTerminal$Annotation */
		    {
			ArrayList list = new121();
			push(goTo(47), list, true);
		    }
		    break;
                    case 122: /* reduce ATerminal$Statement */
		    {
			ArrayList list = new122();
			push(goTo(48), list, true);
		    }
		    break;
                    case 123: /* reduce ANonTerminal$Statement */
		    {
			ArrayList list = new123();
			push(goTo(48), list, true);
		    }
		    break;
                    case 124: /* reduce ATerminal$CatchBlock */
		    {
			ArrayList list = new124();
			push(goTo(49), list, true);
		    }
		    break;
                    case 125: /* reduce ANonTerminal$CatchBlock */
		    {
			ArrayList list = new125();
			push(goTo(49), list, true);
		    }
		    break;
                    case 126: /* reduce ATerminal$StringArgsTail */
		    {
			ArrayList list = new126();
			push(goTo(50), list, true);
		    }
		    break;
                    case 127: /* reduce ANonTerminal$StringArgsTail */
		    {
			ArrayList list = new127();
			push(goTo(50), list, true);
		    }
		    break;
                    case 128: /* reduce ATerminal$ArgsTail */
		    {
			ArrayList list = new128();
			push(goTo(51), list, true);
		    }
		    break;
                    case 129: /* reduce ANonTerminal$ArgsTail */
		    {
			ArrayList list = new129();
			push(goTo(51), list, true);
		    }
		    break;
                    case 130: /* reduce ATerminal$ParamsTail */
		    {
			ArrayList list = new130();
			push(goTo(52), list, true);
		    }
		    break;
                    case 131: /* reduce ANonTerminal$ParamsTail */
		    {
			ArrayList list = new131();
			push(goTo(52), list, true);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PProgram node1 = (PProgram) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AProgram */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pprogramNode1 = new AProgram(listNode3);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce ABehaviourToplevel */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PToplevel ptoplevelNode1;
        {
            // Block
        PBehaviour pbehaviourNode2;
        pbehaviourNode2 = (PBehaviour)nodeArrayList1.get(0);

        ptoplevelNode1 = new ABehaviourToplevel(pbehaviourNode2);
        }
	nodeList.add(ptoplevelNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AConfigToplevel */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PToplevel ptoplevelNode1;
        {
            // Block
        PConfig pconfigNode2;
        pconfigNode2 = (PConfig)nodeArrayList1.get(0);

        ptoplevelNode1 = new AConfigToplevel(pconfigNode2);
        }
	nodeList.add(ptoplevelNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AImportToplevel */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PToplevel ptoplevelNode1;
        {
            // Block
        PImport pimportNode2;
        pimportNode2 = (PImport)nodeArrayList1.get(0);

        ptoplevelNode1 = new AImportToplevel(pimportNode2);
        }
	nodeList.add(ptoplevelNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AFactToplevel */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PToplevel ptoplevelNode1;
        {
            // Block
        PFact pfactNode2;
        pfactNode2 = (PFact)nodeArrayList1.get(0);

        ptoplevelNode1 = new AFactToplevel(pfactNode2);
        }
	nodeList.add(ptoplevelNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce ARuleToplevel */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PToplevel ptoplevelNode1;
        {
            // Block
        PRule pruleNode2;
        pruleNode2 = (PRule)nodeArrayList1.get(0);

        ptoplevelNode1 = new ARuleToplevel(pruleNode2);
        }
	nodeList.add(ptoplevelNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce ADeclareToplevel */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PToplevel ptoplevelNode1;
        {
            // Block
        PDeclare pdeclareNode2;
        pdeclareNode2 = (PDeclare)nodeArrayList1.get(0);

        ptoplevelNode1 = new ADeclareToplevel(pdeclareNode2);
        }
	nodeList.add(ptoplevelNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AAssertToplevel */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PToplevel ptoplevelNode1;
        {
            // Block
        PAssert passertNode2;
        passertNode2 = (PAssert)nodeArrayList1.get(0);

        ptoplevelNode1 = new AAssertToplevel(passertNode2);
        }
	nodeList.add(ptoplevelNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AQueryToplevel */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PToplevel ptoplevelNode1;
        {
            // Block
        PQuery pqueryNode2;
        pqueryNode2 = (PQuery)nodeArrayList1.get(0);

        ptoplevelNode1 = new AQueryToplevel(pqueryNode2);
        }
	nodeList.add(ptoplevelNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AImport */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PImport pimportNode1;
        {
            // Block
        TImportTok timporttokNode2;
        TStringLiteral tstringliteralNode3;
        TDot tdotNode4;
        timporttokNode2 = (TImportTok)nodeArrayList1.get(0);
        tstringliteralNode3 = (TStringLiteral)nodeArrayList2.get(0);
        tdotNode4 = (TDot)nodeArrayList3.get(0);

        pimportNode1 = new AImport(timporttokNode2, tstringliteralNode3, tdotNode4);
        }
	nodeList.add(pimportNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce ADeclare */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDeclare pdeclareNode1;
        {
            // Block
        TDeclareTok tdeclaretokNode2;
        PAtom patomNode3;
        TDot tdotNode4;
        tdeclaretokNode2 = (TDeclareTok)nodeArrayList1.get(0);
        patomNode3 = (PAtom)nodeArrayList2.get(0);
        tdotNode4 = (TDot)nodeArrayList3.get(0);

        pdeclareNode1 = new ADeclare(tdeclaretokNode2, patomNode3, tdotNode4);
        }
	nodeList.add(pdeclareNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AFact */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFact pfactNode1;
        {
            // Block
        PAtom patomNode2;
        TDot tdotNode3;
        patomNode2 = (PAtom)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);

        pfactNode1 = new AFact(patomNode2, tdotNode3);
        }
	nodeList.add(pfactNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce ARule */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRule pruleNode1;
        {
            // Block
        PAtom patomNode2;
        TIfDl tifdlNode3;
        PLiterals pliteralsNode4;
        TDot tdotNode5;
        patomNode2 = (PAtom)nodeArrayList1.get(0);
        tifdlNode3 = (TIfDl)nodeArrayList2.get(0);
        pliteralsNode4 = (PLiterals)nodeArrayList3.get(0);
        tdotNode5 = (TDot)nodeArrayList4.get(0);

        pruleNode1 = new ARule(patomNode2, tifdlNode3, pliteralsNode4, tdotNode5);
        }
	nodeList.add(pruleNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AAliterals1Literals */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLiterals pliteralsNode1;
        {
            // Block
        PLiteral pliteralNode2;
        LinkedList listNode3 = new LinkedList();
        pliteralNode2 = (PLiteral)nodeArrayList1.get(0);
        {
            // Block
        }

        pliteralsNode1 = new ALiterals(pliteralNode2, listNode3);
        }
	nodeList.add(pliteralsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AAliterals2Literals */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLiterals pliteralsNode1;
        {
            // Block
        PLiteral pliteralNode2;
        LinkedList listNode4 = new LinkedList();
        pliteralNode2 = (PLiteral)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pliteralsNode1 = new ALiterals(pliteralNode2, listNode4);
        }
	nodeList.add(pliteralsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce ALiteralTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLiteralTail pliteraltailNode1;
        {
            // Block
        TComma tcommaNode2;
        PLiteral pliteralNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        pliteralNode3 = (PLiteral)nodeArrayList2.get(0);

        pliteraltailNode1 = new ALiteralTail(tcommaNode2, pliteralNode3);
        }
	nodeList.add(pliteraltailNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AEqBinop */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBinop pbinopNode1;
        {
            // Block
        TEq teqNode2;
        teqNode2 = (TEq)nodeArrayList1.get(0);

        pbinopNode1 = new AEqBinop(teqNode2);
        }
	nodeList.add(pbinopNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce ANeqBinop */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBinop pbinopNode1;
        {
            // Block
        TNeq tneqNode2;
        tneqNode2 = (TNeq)nodeArrayList1.get(0);

        pbinopNode1 = new ANeqBinop(tneqNode2);
        }
	nodeList.add(pbinopNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce APositiveLiteral */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLiteral pliteralNode1;
        {
            // Block
        PAtom patomNode2;
        patomNode2 = (PAtom)nodeArrayList1.get(0);

        pliteralNode1 = new APositiveLiteral(patomNode2);
        }
	nodeList.add(pliteralNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce ANegativeLiteral */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLiteral pliteralNode1;
        {
            // Block
        TBang tbangNode2;
        PAtom patomNode3;
        tbangNode2 = (TBang)nodeArrayList1.get(0);
        patomNode3 = (PAtom)nodeArrayList2.get(0);

        pliteralNode1 = new ANegativeLiteral(tbangNode2, patomNode3);
        }
	nodeList.add(pliteralNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce ANullaryAtom */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAtom patomNode1;
        {
            // Block
        TName tnameNode2;
        tnameNode2 = (TName)nodeArrayList1.get(0);

        patomNode1 = new ANullaryAtom(tnameNode2);
        }
	nodeList.add(patomNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce ANormalAtom */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAtom patomNode1;
        {
            // Block
        TName tnameNode2;
        TLPar tlparNode3;
        PTerms ptermsNode4;
        TRPar trparNode5;
        tnameNode2 = (TName)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        ptermsNode4 = (PTerms)nodeArrayList3.get(0);
        trparNode5 = (TRPar)nodeArrayList4.get(0);

        patomNode1 = new ANormalAtom(tnameNode2, tlparNode3, ptermsNode4, trparNode5);
        }
	nodeList.add(patomNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce ABuiltinAtom */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAtom patomNode1;
        {
            // Block
        PTerm ptermNode2;
        PBinop pbinopNode3;
        PTerm ptermNode4;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        pbinopNode3 = (PBinop)nodeArrayList2.get(0);
        ptermNode4 = (PTerm)nodeArrayList3.get(0);

        patomNode1 = new ABuiltinAtom(ptermNode2, pbinopNode3, ptermNode4);
        }
	nodeList.add(patomNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AAterms1Terms */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerms ptermsNode1;
        {
            // Block
        PTerm ptermNode2;
        LinkedList listNode3 = new LinkedList();
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        {
            // Block
        }

        ptermsNode1 = new ATerms(ptermNode2, listNode3);
        }
	nodeList.add(ptermsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AAterms2Terms */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerms ptermsNode1;
        {
            // Block
        PTerm ptermNode2;
        LinkedList listNode4 = new LinkedList();
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptermsNode1 = new ATerms(ptermNode2, listNode4);
        }
	nodeList.add(ptermsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce ATermTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTermTail ptermtailNode1;
        {
            // Block
        TComma tcommaNode2;
        PTerm ptermNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        ptermNode3 = (PTerm)nodeArrayList2.get(0);

        ptermtailNode1 = new ATermTail(tcommaNode2, ptermNode3);
        }
	nodeList.add(ptermtailNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AVarTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TQuestion tquestionNode2;
        TName tnameNode3;
        tquestionNode2 = (TQuestion)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);

        ptermNode1 = new AVarTerm(tquestionNode2, tnameNode3);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AJavavarTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TName tnameNode2;
        tnameNode2 = (TName)nodeArrayList1.get(0);

        ptermNode1 = new AJavavarTerm(tnameNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AStringTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TStringLiteral tstringliteralNode2;
        tstringliteralNode2 = (TStringLiteral)nodeArrayList1.get(0);

        ptermNode1 = new AStringTerm(tstringliteralNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce AIntTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TNumber tnumberNode2;
        tnumberNode2 = (TNumber)nodeArrayList1.get(0);

        ptermNode1 = new AIntTerm(tnumberNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce ABoolTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TBool tboolNode2;
        tboolNode2 = (TBool)nodeArrayList1.get(0);

        ptermNode1 = new ABoolTerm(tboolNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce ACompositeTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        TName tnameNode2;
        TLPar tlparNode3;
        PTerms ptermsNode4;
        TRPar trparNode5;
        tnameNode2 = (TName)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        ptermsNode4 = (PTerms)nodeArrayList3.get(0);
        trparNode5 = (TRPar)nodeArrayList4.get(0);

        ptermNode1 = new ACompositeTerm(tnameNode2, tlparNode3, ptermsNode4, trparNode5);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce AQuery */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PQuery pqueryNode1;
        {
            // Block
        TQueryStart tquerystartNode2;
        PLiterals pliteralsNode3;
        TDot tdotNode4;
        tquerystartNode2 = (TQueryStart)nodeArrayList1.get(0);
        pliteralsNode3 = (PLiterals)nodeArrayList2.get(0);
        tdotNode4 = (TDot)nodeArrayList3.get(0);

        pqueryNode1 = new AQuery(tquerystartNode2, pliteralsNode3, tdotNode4);
        }
	nodeList.add(pqueryNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce AAssert */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAssert passertNode1;
        {
            // Block
        TAssertTok tasserttokNode2;
        PLiterals pliteralsNode3;
        TDot tdotNode4;
        tasserttokNode2 = (TAssertTok)nodeArrayList1.get(0);
        pliteralsNode3 = (PLiterals)nodeArrayList2.get(0);
        tdotNode4 = (TDot)nodeArrayList3.get(0);

        passertNode1 = new AAssert(tasserttokNode2, pliteralsNode3, tdotNode4);
        }
	nodeList.add(passertNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce ANamedPattern */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPattern ppatternNode1;
        {
            // Block
        TName tnameNode2;
        tnameNode2 = (TName)nodeArrayList1.get(0);

        ppatternNode1 = new ANamedPattern(tnameNode2);
        }
	nodeList.add(ppatternNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce AAnyPattern */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PPattern ppatternNode1;
        {
            // Block
        TStar tstarNode2;
        tstarNode2 = (TStar)nodeArrayList1.get(0);

        ppatternNode1 = new AAnyPattern(tstarNode2);
        }
	nodeList.add(ppatternNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce AConfig */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PConfig pconfigNode1;
        {
            // Block
        TConfigTok tconfigtokNode2;
        TLBrace tlbraceNode3;
        PConfigBody pconfigbodyNode4;
        TRBrace trbraceNode5;
        tconfigtokNode2 = (TConfigTok)nodeArrayList1.get(0);
        tlbraceNode3 = (TLBrace)nodeArrayList2.get(0);
        pconfigbodyNode4 = (PConfigBody)nodeArrayList3.get(0);
        trbraceNode5 = (TRBrace)nodeArrayList4.get(0);

        pconfigNode1 = new AConfig(tconfigtokNode2, tlbraceNode3, pconfigbodyNode4, trbraceNode5);
        }
	nodeList.add(pconfigNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce AAbehaviour1Behaviour */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBehaviour pbehaviourNode1;
        {
            // Block
        TClassTok tclasstokNode2;
        TName tnameNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TLBrace tlbraceNode5;
        PClassBody pclassbodyNode6;
        TRBrace trbraceNode7;
        tclasstokNode2 = (TClassTok)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);
        tlbraceNode5 = (TLBrace)nodeArrayList3.get(0);
        pclassbodyNode6 = (PClassBody)nodeArrayList4.get(0);
        trbraceNode7 = (TRBrace)nodeArrayList5.get(0);

        pbehaviourNode1 = new ABehaviour(tclasstokNode2, tnameNode3, null, tlbraceNode5, pclassbodyNode6, trbraceNode7);
        }
	nodeList.add(pbehaviourNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce AAbehaviour2Behaviour */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PBehaviour pbehaviourNode1;
        {
            // Block
        TClassTok tclasstokNode2;
        TName tnameNode3;
        PExtends pextendsNode4;
        TLBrace tlbraceNode5;
        PClassBody pclassbodyNode6;
        TRBrace trbraceNode7;
        tclasstokNode2 = (TClassTok)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);
        pextendsNode4 = (PExtends)nodeArrayList3.get(0);
        tlbraceNode5 = (TLBrace)nodeArrayList4.get(0);
        pclassbodyNode6 = (PClassBody)nodeArrayList5.get(0);
        trbraceNode7 = (TRBrace)nodeArrayList6.get(0);

        pbehaviourNode1 = new ABehaviour(tclasstokNode2, tnameNode3, pextendsNode4, tlbraceNode5, pclassbodyNode6, trbraceNode7);
        }
	nodeList.add(pbehaviourNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce AExtends */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExtends pextendsNode1;
        {
            // Block
        TExtendsTok textendstokNode2;
        TName tnameNode3;
        textendstokNode2 = (TExtendsTok)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);

        pextendsNode1 = new AExtends(textendstokNode2, tnameNode3);
        }
	nodeList.add(pextendsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce AAclassbody1ClassBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PClassBody pclassbodyNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        }

        pclassbodyNode1 = new AClassBody(listNode2, listNode3);
        }
	nodeList.add(pclassbodyNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce AAclassbody2ClassBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PClassBody pclassbodyNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        }

        pclassbodyNode1 = new AClassBody(listNode3, listNode4);
        }
	nodeList.add(pclassbodyNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce AAclassbody3ClassBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PClassBody pclassbodyNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pclassbodyNode1 = new AClassBody(listNode2, listNode4);
        }
	nodeList.add(pclassbodyNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce AAclassbody4ClassBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PClassBody pclassbodyNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pclassbodyNode1 = new AClassBody(listNode3, listNode5);
        }
	nodeList.add(pclassbodyNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce AAconfigbody1ConfigBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PConfigBody pconfigbodyNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        }
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pconfigbodyNode1 = new AConfigBody(listNode2, listNode4);
        }
	nodeList.add(pconfigbodyNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce AAconfigbody2ConfigBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PConfigBody pconfigbodyNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pconfigbodyNode1 = new AConfigBody(listNode3, listNode5);
        }
	nodeList.add(pconfigbodyNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce AField */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PField pfieldNode1;
        {
            // Block
        TPrivateTok tprivatetokNode2;
        PType ptypeNode3;
        TName tnameNode4;
        TSemi tsemiNode5;
        tprivatetokNode2 = (TPrivateTok)nodeArrayList1.get(0);
        ptypeNode3 = (PType)nodeArrayList2.get(0);
        tnameNode4 = (TName)nodeArrayList3.get(0);
        tsemiNode5 = (TSemi)nodeArrayList4.get(0);

        pfieldNode1 = new AField(tprivatetokNode2, ptypeNode3, tnameNode4, tsemiNode5);
        }
	nodeList.add(pfieldNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce AConfigField */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PConfigField pconfigfieldNode1;
        {
            // Block
        PType ptypeNode2;
        TName tnameNode3;
        TSemi tsemiNode4;
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);
        tsemiNode4 = (TSemi)nodeArrayList3.get(0);

        pconfigfieldNode1 = new AConfigField(ptypeNode2, tnameNode3, tsemiNode4);
        }
	nodeList.add(pconfigfieldNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce AType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TName tnameNode2;
        tnameNode2 = (TName)nodeArrayList1.get(0);

        ptypeNode1 = new AType(tnameNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce ANoargsAnnotation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAnnotation pannotationNode1;
        {
            // Block
        TAtTok tattokNode2;
        TName tnameNode3;
        tattokNode2 = (TAtTok)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);

        pannotationNode1 = new ANoargsAnnotation(tattokNode2, tnameNode3);
        }
	nodeList.add(pannotationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce AAargsannotation1Annotation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAnnotation pannotationNode1;
        {
            // Block
        TAtTok tattokNode2;
        TName tnameNode3;
        TLPar tlparNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        TRPar trparNode6;
        tattokNode2 = (TAtTok)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        trparNode6 = (TRPar)nodeArrayList4.get(0);

        pannotationNode1 = new AArgsAnnotation(tattokNode2, tnameNode3, tlparNode4, null, trparNode6);
        }
	nodeList.add(pannotationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce AAargsannotation2Annotation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAnnotation pannotationNode1;
        {
            // Block
        TAtTok tattokNode2;
        TName tnameNode3;
        TLPar tlparNode4;
        PStringArgs pstringargsNode5;
        TRPar trparNode6;
        tattokNode2 = (TAtTok)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        pstringargsNode5 = (PStringArgs)nodeArrayList4.get(0);
        trparNode6 = (TRPar)nodeArrayList5.get(0);

        pannotationNode1 = new AArgsAnnotation(tattokNode2, tnameNode3, tlparNode4, pstringargsNode5, trparNode6);
        }
	nodeList.add(pannotationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce AAmethod1Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        TPublicTok tpublictokNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PPattern ppatternNode5;
        TLPar tlparNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TRPar trparNode9;
        TLBrace tlbraceNode10;
        PCode pcodeNode11;
        TRBrace trbraceNode12;
        {
            // Block
        }
        tpublictokNode3 = (TPublicTok)nodeArrayList1.get(0);
        ppatternNode5 = (PPattern)nodeArrayList2.get(0);
        tlparNode6 = (TLPar)nodeArrayList3.get(0);
        trparNode9 = (TRPar)nodeArrayList4.get(0);
        tlbraceNode10 = (TLBrace)nodeArrayList5.get(0);
        pcodeNode11 = (PCode)nodeArrayList6.get(0);
        trbraceNode12 = (TRBrace)nodeArrayList7.get(0);

        pmethodNode1 = new AMethod(listNode2, tpublictokNode3, null, ppatternNode5, tlparNode6, null, null, trparNode9, tlbraceNode10, pcodeNode11, trbraceNode12);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce AAmethod2Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TPublicTok tpublictokNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PPattern ppatternNode6;
        TLPar tlparNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        @SuppressWarnings("unused") Object nullNode9 = null;
        TRPar trparNode10;
        TLBrace tlbraceNode11;
        PCode pcodeNode12;
        TRBrace trbraceNode13;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tpublictokNode4 = (TPublicTok)nodeArrayList2.get(0);
        ppatternNode6 = (PPattern)nodeArrayList3.get(0);
        tlparNode7 = (TLPar)nodeArrayList4.get(0);
        trparNode10 = (TRPar)nodeArrayList5.get(0);
        tlbraceNode11 = (TLBrace)nodeArrayList6.get(0);
        pcodeNode12 = (PCode)nodeArrayList7.get(0);
        trbraceNode13 = (TRBrace)nodeArrayList8.get(0);

        pmethodNode1 = new AMethod(listNode3, tpublictokNode4, null, ppatternNode6, tlparNode7, null, null, trparNode10, tlbraceNode11, pcodeNode12, trbraceNode13);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce AAmethod3Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        TPublicTok tpublictokNode3;
        PType ptypeNode4;
        PPattern ppatternNode5;
        TLPar tlparNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TRPar trparNode9;
        TLBrace tlbraceNode10;
        PCode pcodeNode11;
        TRBrace trbraceNode12;
        {
            // Block
        }
        tpublictokNode3 = (TPublicTok)nodeArrayList1.get(0);
        ptypeNode4 = (PType)nodeArrayList2.get(0);
        ppatternNode5 = (PPattern)nodeArrayList3.get(0);
        tlparNode6 = (TLPar)nodeArrayList4.get(0);
        trparNode9 = (TRPar)nodeArrayList5.get(0);
        tlbraceNode10 = (TLBrace)nodeArrayList6.get(0);
        pcodeNode11 = (PCode)nodeArrayList7.get(0);
        trbraceNode12 = (TRBrace)nodeArrayList8.get(0);

        pmethodNode1 = new AMethod(listNode2, tpublictokNode3, ptypeNode4, ppatternNode5, tlparNode6, null, null, trparNode9, tlbraceNode10, pcodeNode11, trbraceNode12);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce AAmethod4Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TPublicTok tpublictokNode4;
        PType ptypeNode5;
        PPattern ppatternNode6;
        TLPar tlparNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        @SuppressWarnings("unused") Object nullNode9 = null;
        TRPar trparNode10;
        TLBrace tlbraceNode11;
        PCode pcodeNode12;
        TRBrace trbraceNode13;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tpublictokNode4 = (TPublicTok)nodeArrayList2.get(0);
        ptypeNode5 = (PType)nodeArrayList3.get(0);
        ppatternNode6 = (PPattern)nodeArrayList4.get(0);
        tlparNode7 = (TLPar)nodeArrayList5.get(0);
        trparNode10 = (TRPar)nodeArrayList6.get(0);
        tlbraceNode11 = (TLBrace)nodeArrayList7.get(0);
        pcodeNode12 = (PCode)nodeArrayList8.get(0);
        trbraceNode13 = (TRBrace)nodeArrayList9.get(0);

        pmethodNode1 = new AMethod(listNode3, tpublictokNode4, ptypeNode5, ppatternNode6, tlparNode7, null, null, trparNode10, tlbraceNode11, pcodeNode12, trbraceNode13);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce AAmethod5Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        TPublicTok tpublictokNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PPattern ppatternNode5;
        TLPar tlparNode6;
        PParams pparamsNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TRPar trparNode9;
        TLBrace tlbraceNode10;
        PCode pcodeNode11;
        TRBrace trbraceNode12;
        {
            // Block
        }
        tpublictokNode3 = (TPublicTok)nodeArrayList1.get(0);
        ppatternNode5 = (PPattern)nodeArrayList2.get(0);
        tlparNode6 = (TLPar)nodeArrayList3.get(0);
        pparamsNode7 = (PParams)nodeArrayList4.get(0);
        trparNode9 = (TRPar)nodeArrayList5.get(0);
        tlbraceNode10 = (TLBrace)nodeArrayList6.get(0);
        pcodeNode11 = (PCode)nodeArrayList7.get(0);
        trbraceNode12 = (TRBrace)nodeArrayList8.get(0);

        pmethodNode1 = new AMethod(listNode2, tpublictokNode3, null, ppatternNode5, tlparNode6, pparamsNode7, null, trparNode9, tlbraceNode10, pcodeNode11, trbraceNode12);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce AAmethod6Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TPublicTok tpublictokNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PPattern ppatternNode6;
        TLPar tlparNode7;
        PParams pparamsNode8;
        @SuppressWarnings("unused") Object nullNode9 = null;
        TRPar trparNode10;
        TLBrace tlbraceNode11;
        PCode pcodeNode12;
        TRBrace trbraceNode13;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tpublictokNode4 = (TPublicTok)nodeArrayList2.get(0);
        ppatternNode6 = (PPattern)nodeArrayList3.get(0);
        tlparNode7 = (TLPar)nodeArrayList4.get(0);
        pparamsNode8 = (PParams)nodeArrayList5.get(0);
        trparNode10 = (TRPar)nodeArrayList6.get(0);
        tlbraceNode11 = (TLBrace)nodeArrayList7.get(0);
        pcodeNode12 = (PCode)nodeArrayList8.get(0);
        trbraceNode13 = (TRBrace)nodeArrayList9.get(0);

        pmethodNode1 = new AMethod(listNode3, tpublictokNode4, null, ppatternNode6, tlparNode7, pparamsNode8, null, trparNode10, tlbraceNode11, pcodeNode12, trbraceNode13);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AAmethod7Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        TPublicTok tpublictokNode3;
        PType ptypeNode4;
        PPattern ppatternNode5;
        TLPar tlparNode6;
        PParams pparamsNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TRPar trparNode9;
        TLBrace tlbraceNode10;
        PCode pcodeNode11;
        TRBrace trbraceNode12;
        {
            // Block
        }
        tpublictokNode3 = (TPublicTok)nodeArrayList1.get(0);
        ptypeNode4 = (PType)nodeArrayList2.get(0);
        ppatternNode5 = (PPattern)nodeArrayList3.get(0);
        tlparNode6 = (TLPar)nodeArrayList4.get(0);
        pparamsNode7 = (PParams)nodeArrayList5.get(0);
        trparNode9 = (TRPar)nodeArrayList6.get(0);
        tlbraceNode10 = (TLBrace)nodeArrayList7.get(0);
        pcodeNode11 = (PCode)nodeArrayList8.get(0);
        trbraceNode12 = (TRBrace)nodeArrayList9.get(0);

        pmethodNode1 = new AMethod(listNode2, tpublictokNode3, ptypeNode4, ppatternNode5, tlparNode6, pparamsNode7, null, trparNode9, tlbraceNode10, pcodeNode11, trbraceNode12);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce AAmethod8Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TPublicTok tpublictokNode4;
        PType ptypeNode5;
        PPattern ppatternNode6;
        TLPar tlparNode7;
        PParams pparamsNode8;
        @SuppressWarnings("unused") Object nullNode9 = null;
        TRPar trparNode10;
        TLBrace tlbraceNode11;
        PCode pcodeNode12;
        TRBrace trbraceNode13;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tpublictokNode4 = (TPublicTok)nodeArrayList2.get(0);
        ptypeNode5 = (PType)nodeArrayList3.get(0);
        ppatternNode6 = (PPattern)nodeArrayList4.get(0);
        tlparNode7 = (TLPar)nodeArrayList5.get(0);
        pparamsNode8 = (PParams)nodeArrayList6.get(0);
        trparNode10 = (TRPar)nodeArrayList7.get(0);
        tlbraceNode11 = (TLBrace)nodeArrayList8.get(0);
        pcodeNode12 = (PCode)nodeArrayList9.get(0);
        trbraceNode13 = (TRBrace)nodeArrayList10.get(0);

        pmethodNode1 = new AMethod(listNode3, tpublictokNode4, ptypeNode5, ppatternNode6, tlparNode7, pparamsNode8, null, trparNode10, tlbraceNode11, pcodeNode12, trbraceNode13);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce AAmethod9Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        TPublicTok tpublictokNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PPattern ppatternNode5;
        TLPar tlparNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TStar tstarNode8;
        TRPar trparNode9;
        TLBrace tlbraceNode10;
        PCode pcodeNode11;
        TRBrace trbraceNode12;
        {
            // Block
        }
        tpublictokNode3 = (TPublicTok)nodeArrayList1.get(0);
        ppatternNode5 = (PPattern)nodeArrayList2.get(0);
        tlparNode6 = (TLPar)nodeArrayList3.get(0);
        tstarNode8 = (TStar)nodeArrayList4.get(0);
        trparNode9 = (TRPar)nodeArrayList5.get(0);
        tlbraceNode10 = (TLBrace)nodeArrayList6.get(0);
        pcodeNode11 = (PCode)nodeArrayList7.get(0);
        trbraceNode12 = (TRBrace)nodeArrayList8.get(0);

        pmethodNode1 = new AMethod(listNode2, tpublictokNode3, null, ppatternNode5, tlparNode6, null, tstarNode8, trparNode9, tlbraceNode10, pcodeNode11, trbraceNode12);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce AAmethod10Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TPublicTok tpublictokNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PPattern ppatternNode6;
        TLPar tlparNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TStar tstarNode9;
        TRPar trparNode10;
        TLBrace tlbraceNode11;
        PCode pcodeNode12;
        TRBrace trbraceNode13;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tpublictokNode4 = (TPublicTok)nodeArrayList2.get(0);
        ppatternNode6 = (PPattern)nodeArrayList3.get(0);
        tlparNode7 = (TLPar)nodeArrayList4.get(0);
        tstarNode9 = (TStar)nodeArrayList5.get(0);
        trparNode10 = (TRPar)nodeArrayList6.get(0);
        tlbraceNode11 = (TLBrace)nodeArrayList7.get(0);
        pcodeNode12 = (PCode)nodeArrayList8.get(0);
        trbraceNode13 = (TRBrace)nodeArrayList9.get(0);

        pmethodNode1 = new AMethod(listNode3, tpublictokNode4, null, ppatternNode6, tlparNode7, null, tstarNode9, trparNode10, tlbraceNode11, pcodeNode12, trbraceNode13);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce AAmethod11Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        TPublicTok tpublictokNode3;
        PType ptypeNode4;
        PPattern ppatternNode5;
        TLPar tlparNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TStar tstarNode8;
        TRPar trparNode9;
        TLBrace tlbraceNode10;
        PCode pcodeNode11;
        TRBrace trbraceNode12;
        {
            // Block
        }
        tpublictokNode3 = (TPublicTok)nodeArrayList1.get(0);
        ptypeNode4 = (PType)nodeArrayList2.get(0);
        ppatternNode5 = (PPattern)nodeArrayList3.get(0);
        tlparNode6 = (TLPar)nodeArrayList4.get(0);
        tstarNode8 = (TStar)nodeArrayList5.get(0);
        trparNode9 = (TRPar)nodeArrayList6.get(0);
        tlbraceNode10 = (TLBrace)nodeArrayList7.get(0);
        pcodeNode11 = (PCode)nodeArrayList8.get(0);
        trbraceNode12 = (TRBrace)nodeArrayList9.get(0);

        pmethodNode1 = new AMethod(listNode2, tpublictokNode3, ptypeNode4, ppatternNode5, tlparNode6, null, tstarNode8, trparNode9, tlbraceNode10, pcodeNode11, trbraceNode12);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce AAmethod12Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TPublicTok tpublictokNode4;
        PType ptypeNode5;
        PPattern ppatternNode6;
        TLPar tlparNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TStar tstarNode9;
        TRPar trparNode10;
        TLBrace tlbraceNode11;
        PCode pcodeNode12;
        TRBrace trbraceNode13;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tpublictokNode4 = (TPublicTok)nodeArrayList2.get(0);
        ptypeNode5 = (PType)nodeArrayList3.get(0);
        ppatternNode6 = (PPattern)nodeArrayList4.get(0);
        tlparNode7 = (TLPar)nodeArrayList5.get(0);
        tstarNode9 = (TStar)nodeArrayList6.get(0);
        trparNode10 = (TRPar)nodeArrayList7.get(0);
        tlbraceNode11 = (TLBrace)nodeArrayList8.get(0);
        pcodeNode12 = (PCode)nodeArrayList9.get(0);
        trbraceNode13 = (TRBrace)nodeArrayList10.get(0);

        pmethodNode1 = new AMethod(listNode3, tpublictokNode4, ptypeNode5, ppatternNode6, tlparNode7, null, tstarNode9, trparNode10, tlbraceNode11, pcodeNode12, trbraceNode13);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce AAmethod13Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        TPublicTok tpublictokNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PPattern ppatternNode5;
        TLPar tlparNode6;
        PParams pparamsNode7;
        TStar tstarNode8;
        TRPar trparNode9;
        TLBrace tlbraceNode10;
        PCode pcodeNode11;
        TRBrace trbraceNode12;
        {
            // Block
        }
        tpublictokNode3 = (TPublicTok)nodeArrayList1.get(0);
        ppatternNode5 = (PPattern)nodeArrayList2.get(0);
        tlparNode6 = (TLPar)nodeArrayList3.get(0);
        pparamsNode7 = (PParams)nodeArrayList4.get(0);
        tstarNode8 = (TStar)nodeArrayList5.get(0);
        trparNode9 = (TRPar)nodeArrayList6.get(0);
        tlbraceNode10 = (TLBrace)nodeArrayList7.get(0);
        pcodeNode11 = (PCode)nodeArrayList8.get(0);
        trbraceNode12 = (TRBrace)nodeArrayList9.get(0);

        pmethodNode1 = new AMethod(listNode2, tpublictokNode3, null, ppatternNode5, tlparNode6, pparamsNode7, tstarNode8, trparNode9, tlbraceNode10, pcodeNode11, trbraceNode12);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce AAmethod14Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TPublicTok tpublictokNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PPattern ppatternNode6;
        TLPar tlparNode7;
        PParams pparamsNode8;
        TStar tstarNode9;
        TRPar trparNode10;
        TLBrace tlbraceNode11;
        PCode pcodeNode12;
        TRBrace trbraceNode13;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tpublictokNode4 = (TPublicTok)nodeArrayList2.get(0);
        ppatternNode6 = (PPattern)nodeArrayList3.get(0);
        tlparNode7 = (TLPar)nodeArrayList4.get(0);
        pparamsNode8 = (PParams)nodeArrayList5.get(0);
        tstarNode9 = (TStar)nodeArrayList6.get(0);
        trparNode10 = (TRPar)nodeArrayList7.get(0);
        tlbraceNode11 = (TLBrace)nodeArrayList8.get(0);
        pcodeNode12 = (PCode)nodeArrayList9.get(0);
        trbraceNode13 = (TRBrace)nodeArrayList10.get(0);

        pmethodNode1 = new AMethod(listNode3, tpublictokNode4, null, ppatternNode6, tlparNode7, pparamsNode8, tstarNode9, trparNode10, tlbraceNode11, pcodeNode12, trbraceNode13);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce AAmethod15Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        TPublicTok tpublictokNode3;
        PType ptypeNode4;
        PPattern ppatternNode5;
        TLPar tlparNode6;
        PParams pparamsNode7;
        TStar tstarNode8;
        TRPar trparNode9;
        TLBrace tlbraceNode10;
        PCode pcodeNode11;
        TRBrace trbraceNode12;
        {
            // Block
        }
        tpublictokNode3 = (TPublicTok)nodeArrayList1.get(0);
        ptypeNode4 = (PType)nodeArrayList2.get(0);
        ppatternNode5 = (PPattern)nodeArrayList3.get(0);
        tlparNode6 = (TLPar)nodeArrayList4.get(0);
        pparamsNode7 = (PParams)nodeArrayList5.get(0);
        tstarNode8 = (TStar)nodeArrayList6.get(0);
        trparNode9 = (TRPar)nodeArrayList7.get(0);
        tlbraceNode10 = (TLBrace)nodeArrayList8.get(0);
        pcodeNode11 = (PCode)nodeArrayList9.get(0);
        trbraceNode12 = (TRBrace)nodeArrayList10.get(0);

        pmethodNode1 = new AMethod(listNode2, tpublictokNode3, ptypeNode4, ppatternNode5, tlparNode6, pparamsNode7, tstarNode8, trparNode9, tlbraceNode10, pcodeNode11, trbraceNode12);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce AAmethod16Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMethod pmethodNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TPublicTok tpublictokNode4;
        PType ptypeNode5;
        PPattern ppatternNode6;
        TLPar tlparNode7;
        PParams pparamsNode8;
        TStar tstarNode9;
        TRPar trparNode10;
        TLBrace tlbraceNode11;
        PCode pcodeNode12;
        TRBrace trbraceNode13;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tpublictokNode4 = (TPublicTok)nodeArrayList2.get(0);
        ptypeNode5 = (PType)nodeArrayList3.get(0);
        ppatternNode6 = (PPattern)nodeArrayList4.get(0);
        tlparNode7 = (TLPar)nodeArrayList5.get(0);
        pparamsNode8 = (PParams)nodeArrayList6.get(0);
        tstarNode9 = (TStar)nodeArrayList7.get(0);
        trparNode10 = (TRPar)nodeArrayList8.get(0);
        tlbraceNode11 = (TLBrace)nodeArrayList9.get(0);
        pcodeNode12 = (PCode)nodeArrayList10.get(0);
        trbraceNode13 = (TRBrace)nodeArrayList11.get(0);

        pmethodNode1 = new AMethod(listNode3, tpublictokNode4, ptypeNode5, ppatternNode6, tlparNode7, pparamsNode8, tstarNode9, trparNode10, tlbraceNode11, pcodeNode12, trbraceNode13);
        }
	nodeList.add(pmethodNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce AAcode1Code */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PCode pcodeNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pcodeNode1 = new ACode(listNode2);
        }
	nodeList.add(pcodeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce AAcode2Code */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCode pcodeNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pcodeNode1 = new ACode(listNode3);
        }
	nodeList.add(pcodeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce AAassign1Assign */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAssign passignNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TName tnameNode3;
        TEq teqNode4;
        tnameNode3 = (TName)nodeArrayList1.get(0);
        teqNode4 = (TEq)nodeArrayList2.get(0);

        passignNode1 = new AAssign(null, tnameNode3, teqNode4);
        }
	nodeList.add(passignNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce AAassign2Assign */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAssign passignNode1;
        {
            // Block
        PType ptypeNode2;
        TName tnameNode3;
        TEq teqNode4;
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);
        teqNode4 = (TEq)nodeArrayList3.get(0);

        passignNode1 = new AAssign(ptypeNode2, tnameNode3, teqNode4);
        }
	nodeList.add(passignNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce AAassignstatement1Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PExpr pexprNode3;
        TSemi tsemiNode4;
        pexprNode3 = (PExpr)nodeArrayList1.get(0);
        tsemiNode4 = (TSemi)nodeArrayList2.get(0);

        pstatementNode1 = new AAssignStatement(null, pexprNode3, tsemiNode4);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce AAassignstatement2Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        PAssign passignNode2;
        PExpr pexprNode3;
        TSemi tsemiNode4;
        passignNode2 = (PAssign)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        tsemiNode4 = (TSemi)nodeArrayList3.get(0);

        pstatementNode1 = new AAssignStatement(passignNode2, pexprNode3, tsemiNode4);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce AAssignDlStatement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        PAssign passignNode2;
        PTerm ptermNode3;
        TIfDl tifdlNode4;
        PLiterals pliteralsNode5;
        TSemi tsemiNode6;
        passignNode2 = (PAssign)nodeArrayList1.get(0);
        ptermNode3 = (PTerm)nodeArrayList2.get(0);
        tifdlNode4 = (TIfDl)nodeArrayList3.get(0);
        pliteralsNode5 = (PLiterals)nodeArrayList4.get(0);
        tsemiNode6 = (TSemi)nodeArrayList5.get(0);

        pstatementNode1 = new AAssignDlStatement(passignNode2, ptermNode3, tifdlNode4, pliteralsNode5, tsemiNode6);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce ADeclStatement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        PType ptypeNode2;
        TName tnameNode3;
        TSemi tsemiNode4;
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);
        tsemiNode4 = (TSemi)nodeArrayList3.get(0);

        pstatementNode1 = new ADeclStatement(ptypeNode2, tnameNode3, tsemiNode4);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce AAtrystatement1Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        TTry ttryNode2;
        TLBrace tlbraceNode3;
        LinkedList listNode4 = new LinkedList();
        TRBrace trbraceNode5;
        LinkedList listNode6 = new LinkedList();
        ttryNode2 = (TTry)nodeArrayList1.get(0);
        tlbraceNode3 = (TLBrace)nodeArrayList2.get(0);
        {
            // Block
        }
        trbraceNode5 = (TRBrace)nodeArrayList3.get(0);
        {
            // Block
        }

        pstatementNode1 = new ATryStatement(ttryNode2, tlbraceNode3, listNode4, trbraceNode5, listNode6);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new77() /* reduce AAtrystatement2Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        TTry ttryNode2;
        TLBrace tlbraceNode3;
        LinkedList listNode5 = new LinkedList();
        TRBrace trbraceNode6;
        LinkedList listNode7 = new LinkedList();
        ttryNode2 = (TTry)nodeArrayList1.get(0);
        tlbraceNode3 = (TLBrace)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        trbraceNode6 = (TRBrace)nodeArrayList4.get(0);
        {
            // Block
        }

        pstatementNode1 = new ATryStatement(ttryNode2, tlbraceNode3, listNode5, trbraceNode6, listNode7);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new78() /* reduce AAtrystatement3Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        TTry ttryNode2;
        TLBrace tlbraceNode3;
        LinkedList listNode4 = new LinkedList();
        TRBrace trbraceNode5;
        LinkedList listNode7 = new LinkedList();
        ttryNode2 = (TTry)nodeArrayList1.get(0);
        tlbraceNode3 = (TLBrace)nodeArrayList2.get(0);
        {
            // Block
        }
        trbraceNode5 = (TRBrace)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pstatementNode1 = new ATryStatement(ttryNode2, tlbraceNode3, listNode4, trbraceNode5, listNode7);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new79() /* reduce AAtrystatement4Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        TTry ttryNode2;
        TLBrace tlbraceNode3;
        LinkedList listNode5 = new LinkedList();
        TRBrace trbraceNode6;
        LinkedList listNode8 = new LinkedList();
        ttryNode2 = (TTry)nodeArrayList1.get(0);
        tlbraceNode3 = (TLBrace)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        trbraceNode6 = (TRBrace)nodeArrayList4.get(0);
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pstatementNode1 = new ATryStatement(ttryNode2, tlbraceNode3, listNode5, trbraceNode6, listNode8);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new80() /* reduce AThrowStatement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        TThrow tthrowNode2;
        TName tnameNode3;
        TSemi tsemiNode4;
        tthrowNode2 = (TThrow)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);
        tsemiNode4 = (TSemi)nodeArrayList3.get(0);

        pstatementNode1 = new AThrowStatement(tthrowNode2, tnameNode3, tsemiNode4);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new81() /* reduce AReturnStatement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        TReturn treturnNode2;
        TName tnameNode3;
        TSemi tsemiNode4;
        treturnNode2 = (TReturn)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);
        tsemiNode4 = (TSemi)nodeArrayList3.get(0);

        pstatementNode1 = new AReturnStatement(treturnNode2, tnameNode3, tsemiNode4);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new82() /* reduce AAcatchblock1CatchBlock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCatchBlock pcatchblockNode1;
        {
            // Block
        TCatch tcatchNode2;
        TLPar tlparNode3;
        PType ptypeNode4;
        TName tnameNode5;
        TRPar trparNode6;
        TLBrace tlbraceNode7;
        LinkedList listNode8 = new LinkedList();
        TRBrace trbraceNode9;
        tcatchNode2 = (TCatch)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        ptypeNode4 = (PType)nodeArrayList3.get(0);
        tnameNode5 = (TName)nodeArrayList4.get(0);
        trparNode6 = (TRPar)nodeArrayList5.get(0);
        tlbraceNode7 = (TLBrace)nodeArrayList6.get(0);
        {
            // Block
        }
        trbraceNode9 = (TRBrace)nodeArrayList7.get(0);

        pcatchblockNode1 = new ACatchBlock(tcatchNode2, tlparNode3, ptypeNode4, tnameNode5, trparNode6, tlbraceNode7, listNode8, trbraceNode9);
        }
	nodeList.add(pcatchblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new83() /* reduce AAcatchblock2CatchBlock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCatchBlock pcatchblockNode1;
        {
            // Block
        TCatch tcatchNode2;
        TLPar tlparNode3;
        PType ptypeNode4;
        TName tnameNode5;
        TRPar trparNode6;
        TLBrace tlbraceNode7;
        LinkedList listNode9 = new LinkedList();
        TRBrace trbraceNode10;
        tcatchNode2 = (TCatch)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        ptypeNode4 = (PType)nodeArrayList3.get(0);
        tnameNode5 = (TName)nodeArrayList4.get(0);
        trparNode6 = (TRPar)nodeArrayList5.get(0);
        tlbraceNode7 = (TLBrace)nodeArrayList6.get(0);
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList7.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        trbraceNode10 = (TRBrace)nodeArrayList8.get(0);

        pcatchblockNode1 = new ACatchBlock(tcatchNode2, tlparNode3, ptypeNode4, tnameNode5, trparNode6, tlbraceNode7, listNode9, trbraceNode10);
        }
	nodeList.add(pcatchblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new84() /* reduce AAnewexpr1Expr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        TNew tnewNode2;
        PType ptypeNode3;
        TLPar tlparNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        TRPar trparNode7;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        ptypeNode3 = (PType)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        trparNode7 = (TRPar)nodeArrayList4.get(0);

        pexprNode1 = new ANewExpr(tnewNode2, ptypeNode3, tlparNode4, null, null, trparNode7);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new85() /* reduce AAnewexpr2Expr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        TNew tnewNode2;
        PType ptypeNode3;
        TLPar tlparNode4;
        PArgs pargsNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        TRPar trparNode7;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        ptypeNode3 = (PType)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        pargsNode5 = (PArgs)nodeArrayList4.get(0);
        trparNode7 = (TRPar)nodeArrayList5.get(0);

        pexprNode1 = new ANewExpr(tnewNode2, ptypeNode3, tlparNode4, pargsNode5, null, trparNode7);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new86() /* reduce AAnewexpr3Expr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        TNew tnewNode2;
        PType ptypeNode3;
        TLPar tlparNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        TStar tstarNode6;
        TRPar trparNode7;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        ptypeNode3 = (PType)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        tstarNode6 = (TStar)nodeArrayList4.get(0);
        trparNode7 = (TRPar)nodeArrayList5.get(0);

        pexprNode1 = new ANewExpr(tnewNode2, ptypeNode3, tlparNode4, null, tstarNode6, trparNode7);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new87() /* reduce AAnewexpr4Expr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        TNew tnewNode2;
        PType ptypeNode3;
        TLPar tlparNode4;
        PArgs pargsNode5;
        TStar tstarNode6;
        TRPar trparNode7;
        tnewNode2 = (TNew)nodeArrayList1.get(0);
        ptypeNode3 = (PType)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        pargsNode5 = (PArgs)nodeArrayList4.get(0);
        tstarNode6 = (TStar)nodeArrayList5.get(0);
        trparNode7 = (TRPar)nodeArrayList6.get(0);

        pexprNode1 = new ANewExpr(tnewNode2, ptypeNode3, tlparNode4, pargsNode5, tstarNode6, trparNode7);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new88() /* reduce AAcallexpr1Expr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        TName tnameNode2;
        TDot tdotNode3;
        PPattern ppatternNode4;
        TLPar tlparNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TRPar trparNode8;
        tnameNode2 = (TName)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        ppatternNode4 = (PPattern)nodeArrayList3.get(0);
        tlparNode5 = (TLPar)nodeArrayList4.get(0);
        trparNode8 = (TRPar)nodeArrayList5.get(0);

        pexprNode1 = new ACallExpr(tnameNode2, tdotNode3, ppatternNode4, tlparNode5, null, null, trparNode8);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new89() /* reduce AAcallexpr2Expr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        TName tnameNode2;
        TDot tdotNode3;
        PPattern ppatternNode4;
        TLPar tlparNode5;
        PArgs pargsNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        TRPar trparNode8;
        tnameNode2 = (TName)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        ppatternNode4 = (PPattern)nodeArrayList3.get(0);
        tlparNode5 = (TLPar)nodeArrayList4.get(0);
        pargsNode6 = (PArgs)nodeArrayList5.get(0);
        trparNode8 = (TRPar)nodeArrayList6.get(0);

        pexprNode1 = new ACallExpr(tnameNode2, tdotNode3, ppatternNode4, tlparNode5, pargsNode6, null, trparNode8);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new90() /* reduce AAcallexpr3Expr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        TName tnameNode2;
        TDot tdotNode3;
        PPattern ppatternNode4;
        TLPar tlparNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        TStar tstarNode7;
        TRPar trparNode8;
        tnameNode2 = (TName)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        ppatternNode4 = (PPattern)nodeArrayList3.get(0);
        tlparNode5 = (TLPar)nodeArrayList4.get(0);
        tstarNode7 = (TStar)nodeArrayList5.get(0);
        trparNode8 = (TRPar)nodeArrayList6.get(0);

        pexprNode1 = new ACallExpr(tnameNode2, tdotNode3, ppatternNode4, tlparNode5, null, tstarNode7, trparNode8);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new91() /* reduce AAcallexpr4Expr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        TName tnameNode2;
        TDot tdotNode3;
        PPattern ppatternNode4;
        TLPar tlparNode5;
        PArgs pargsNode6;
        TStar tstarNode7;
        TRPar trparNode8;
        tnameNode2 = (TName)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        ppatternNode4 = (PPattern)nodeArrayList3.get(0);
        tlparNode5 = (TLPar)nodeArrayList4.get(0);
        pargsNode6 = (PArgs)nodeArrayList5.get(0);
        tstarNode7 = (TStar)nodeArrayList6.get(0);
        trparNode8 = (TRPar)nodeArrayList7.get(0);

        pexprNode1 = new ACallExpr(tnameNode2, tdotNode3, ppatternNode4, tlparNode5, pargsNode6, tstarNode7, trparNode8);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new92() /* reduce AStringExpr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        TStringLiteral tstringliteralNode2;
        tstringliteralNode2 = (TStringLiteral)nodeArrayList1.get(0);

        pexprNode1 = new AStringExpr(tstringliteralNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new93() /* reduce ACopyExpr */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        TName tnameNode2;
        tnameNode2 = (TName)nodeArrayList1.get(0);

        pexprNode1 = new ACopyExpr(tnameNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new94() /* reduce AAstringargs1StringArgs */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStringArgs pstringargsNode1;
        {
            // Block
        TStringLiteral tstringliteralNode2;
        LinkedList listNode3 = new LinkedList();
        tstringliteralNode2 = (TStringLiteral)nodeArrayList1.get(0);
        {
            // Block
        }

        pstringargsNode1 = new AStringArgs(tstringliteralNode2, listNode3);
        }
	nodeList.add(pstringargsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new95() /* reduce AAstringargs2StringArgs */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStringArgs pstringargsNode1;
        {
            // Block
        TStringLiteral tstringliteralNode2;
        LinkedList listNode4 = new LinkedList();
        tstringliteralNode2 = (TStringLiteral)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pstringargsNode1 = new AStringArgs(tstringliteralNode2, listNode4);
        }
	nodeList.add(pstringargsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new96() /* reduce AStringArgsTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PStringArgsTail pstringargstailNode1;
        {
            // Block
        TComma tcommaNode2;
        TStringLiteral tstringliteralNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        tstringliteralNode3 = (TStringLiteral)nodeArrayList2.get(0);

        pstringargstailNode1 = new AStringArgsTail(tcommaNode2, tstringliteralNode3);
        }
	nodeList.add(pstringargstailNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new97() /* reduce AAargs1Args */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PArgs pargsNode1;
        {
            // Block
        PExpr pexprNode2;
        LinkedList listNode3 = new LinkedList();
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        {
            // Block
        }

        pargsNode1 = new AArgs(pexprNode2, listNode3);
        }
	nodeList.add(pargsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new98() /* reduce AAargs2Args */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PArgs pargsNode1;
        {
            // Block
        PExpr pexprNode2;
        LinkedList listNode4 = new LinkedList();
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pargsNode1 = new AArgs(pexprNode2, listNode4);
        }
	nodeList.add(pargsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new99() /* reduce AArgsTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PArgsTail pargstailNode1;
        {
            // Block
        TComma tcommaNode2;
        PExpr pexprNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);

        pargstailNode1 = new AArgsTail(tcommaNode2, pexprNode3);
        }
	nodeList.add(pargstailNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new100() /* reduce AParam */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParam pparamNode1;
        {
            // Block
        PType ptypeNode2;
        TName tnameNode3;
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        tnameNode3 = (TName)nodeArrayList2.get(0);

        pparamNode1 = new AParam(ptypeNode2, tnameNode3);
        }
	nodeList.add(pparamNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new101() /* reduce AAparams1Params */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParams pparamsNode1;
        {
            // Block
        PParam pparamNode2;
        LinkedList listNode3 = new LinkedList();
        pparamNode2 = (PParam)nodeArrayList1.get(0);
        {
            // Block
        }

        pparamsNode1 = new AParams(pparamNode2, listNode3);
        }
	nodeList.add(pparamsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new102() /* reduce AAparams2Params */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParams pparamsNode1;
        {
            // Block
        PParam pparamNode2;
        LinkedList listNode4 = new LinkedList();
        pparamNode2 = (PParam)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparamsNode1 = new AParams(pparamNode2, listNode4);
        }
	nodeList.add(pparamsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new103() /* reduce AParamsTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParamsTail pparamstailNode1;
        {
            // Block
        TComma tcommaNode2;
        PParam pparamNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        pparamNode3 = (PParam)nodeArrayList2.get(0);

        pparamstailNode1 = new AParamsTail(tcommaNode2, pparamNode3);
        }
	nodeList.add(pparamstailNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new104() /* reduce AAnamedblock1Namedblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PNamedblock pnamedblockNode1;
        {
            // Block
        TName tnameNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TLBrace tlbraceNode4;
        PCode pcodeNode5;
        TRBrace trbraceNode6;
        tnameNode2 = (TName)nodeArrayList1.get(0);
        tlbraceNode4 = (TLBrace)nodeArrayList2.get(0);
        pcodeNode5 = (PCode)nodeArrayList3.get(0);
        trbraceNode6 = (TRBrace)nodeArrayList4.get(0);

        pnamedblockNode1 = new ANamedblock(tnameNode2, null, tlbraceNode4, pcodeNode5, trbraceNode6);
        }
	nodeList.add(pnamedblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new105() /* reduce AAnamedblock2Namedblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PNamedblock pnamedblockNode1;
        {
            // Block
        TName tnameNode2;
        TStringLiteral tstringliteralNode3;
        TLBrace tlbraceNode4;
        PCode pcodeNode5;
        TRBrace trbraceNode6;
        tnameNode2 = (TName)nodeArrayList1.get(0);
        tstringliteralNode3 = (TStringLiteral)nodeArrayList2.get(0);
        tlbraceNode4 = (TLBrace)nodeArrayList3.get(0);
        pcodeNode5 = (PCode)nodeArrayList4.get(0);
        trbraceNode6 = (TRBrace)nodeArrayList5.get(0);

        pnamedblockNode1 = new ANamedblock(tnameNode2, tstringliteralNode3, tlbraceNode4, pcodeNode5, trbraceNode6);
        }
	nodeList.add(pnamedblockNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new106() /* reduce ATerminal$Toplevel */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PToplevel ptoplevelNode1;
        ptoplevelNode1 = (PToplevel)nodeArrayList1.get(0);
	if(ptoplevelNode1 != null)
	{
	  listNode2.add(ptoplevelNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new107() /* reduce ANonTerminal$Toplevel */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PToplevel ptoplevelNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptoplevelNode2 = (PToplevel)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptoplevelNode2 != null)
	{
	  listNode3.add(ptoplevelNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new108() /* reduce ATerminal$LiteralTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLiteralTail pliteraltailNode1;
        pliteraltailNode1 = (PLiteralTail)nodeArrayList1.get(0);
	if(pliteraltailNode1 != null)
	{
	  listNode2.add(pliteraltailNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new109() /* reduce ANonTerminal$LiteralTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLiteralTail pliteraltailNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pliteraltailNode2 = (PLiteralTail)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pliteraltailNode2 != null)
	{
	  listNode3.add(pliteraltailNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new110() /* reduce ATerminal$TermTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTermTail ptermtailNode1;
        ptermtailNode1 = (PTermTail)nodeArrayList1.get(0);
	if(ptermtailNode1 != null)
	{
	  listNode2.add(ptermtailNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new111() /* reduce ANonTerminal$TermTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTermTail ptermtailNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptermtailNode2 = (PTermTail)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptermtailNode2 != null)
	{
	  listNode3.add(ptermtailNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new112() /* reduce ATerminal$Field */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PField pfieldNode1;
        pfieldNode1 = (PField)nodeArrayList1.get(0);
	if(pfieldNode1 != null)
	{
	  listNode2.add(pfieldNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new113() /* reduce ANonTerminal$Field */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PField pfieldNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pfieldNode2 = (PField)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pfieldNode2 != null)
	{
	  listNode3.add(pfieldNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new114() /* reduce ATerminal$Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PMethod pmethodNode1;
        pmethodNode1 = (PMethod)nodeArrayList1.get(0);
	if(pmethodNode1 != null)
	{
	  listNode2.add(pmethodNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new115() /* reduce ANonTerminal$Method */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PMethod pmethodNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmethodNode2 = (PMethod)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmethodNode2 != null)
	{
	  listNode3.add(pmethodNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new116() /* reduce ATerminal$Namedblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PNamedblock pnamedblockNode1;
        pnamedblockNode1 = (PNamedblock)nodeArrayList1.get(0);
	if(pnamedblockNode1 != null)
	{
	  listNode2.add(pnamedblockNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new117() /* reduce ANonTerminal$Namedblock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PNamedblock pnamedblockNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pnamedblockNode2 = (PNamedblock)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pnamedblockNode2 != null)
	{
	  listNode3.add(pnamedblockNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new118() /* reduce ATerminal$ConfigField */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PConfigField pconfigfieldNode1;
        pconfigfieldNode1 = (PConfigField)nodeArrayList1.get(0);
	if(pconfigfieldNode1 != null)
	{
	  listNode2.add(pconfigfieldNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new119() /* reduce ANonTerminal$ConfigField */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PConfigField pconfigfieldNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pconfigfieldNode2 = (PConfigField)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pconfigfieldNode2 != null)
	{
	  listNode3.add(pconfigfieldNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new120() /* reduce ATerminal$Annotation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAnnotation pannotationNode1;
        pannotationNode1 = (PAnnotation)nodeArrayList1.get(0);
	if(pannotationNode1 != null)
	{
	  listNode2.add(pannotationNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new121() /* reduce ANonTerminal$Annotation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAnnotation pannotationNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pannotationNode2 = (PAnnotation)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pannotationNode2 != null)
	{
	  listNode3.add(pannotationNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new122() /* reduce ATerminal$Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PStatement pstatementNode1;
        pstatementNode1 = (PStatement)nodeArrayList1.get(0);
	if(pstatementNode1 != null)
	{
	  listNode2.add(pstatementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new123() /* reduce ANonTerminal$Statement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PStatement pstatementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pstatementNode2 = (PStatement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pstatementNode2 != null)
	{
	  listNode3.add(pstatementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new124() /* reduce ATerminal$CatchBlock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PCatchBlock pcatchblockNode1;
        pcatchblockNode1 = (PCatchBlock)nodeArrayList1.get(0);
	if(pcatchblockNode1 != null)
	{
	  listNode2.add(pcatchblockNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new125() /* reduce ANonTerminal$CatchBlock */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PCatchBlock pcatchblockNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcatchblockNode2 = (PCatchBlock)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcatchblockNode2 != null)
	{
	  listNode3.add(pcatchblockNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new126() /* reduce ATerminal$StringArgsTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PStringArgsTail pstringargstailNode1;
        pstringargstailNode1 = (PStringArgsTail)nodeArrayList1.get(0);
	if(pstringargstailNode1 != null)
	{
	  listNode2.add(pstringargstailNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new127() /* reduce ANonTerminal$StringArgsTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PStringArgsTail pstringargstailNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pstringargstailNode2 = (PStringArgsTail)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pstringargstailNode2 != null)
	{
	  listNode3.add(pstringargstailNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new128() /* reduce ATerminal$ArgsTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PArgsTail pargstailNode1;
        pargstailNode1 = (PArgsTail)nodeArrayList1.get(0);
	if(pargstailNode1 != null)
	{
	  listNode2.add(pargstailNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new129() /* reduce ANonTerminal$ArgsTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PArgsTail pargstailNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pargstailNode2 = (PArgsTail)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pargstailNode2 != null)
	{
	  listNode3.add(pargstailNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new130() /* reduce ATerminal$ParamsTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParamsTail pparamstailNode1;
        pparamstailNode1 = (PParamsTail)nodeArrayList1.get(0);
	if(pparamstailNode1 != null)
	{
	  listNode2.add(pparamstailNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new131() /* reduce ANonTerminal$ParamsTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParamsTail pparamstailNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparamstailNode2 = (PParamsTail)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparamstailNode2 != null)
	{
	  listNode3.add(pparamstailNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {0, SHIFT, 1}, {9, SHIFT, 2}, {20, SHIFT, 3}, {21, SHIFT, 4}, {22, SHIFT, 5}, {26, SHIFT, 6}, {27, SHIFT, 7}, {28, SHIFT, 8}, {31, SHIFT, 9}, {32, SHIFT, 10}, {33, SHIFT, 11}, },
			{{-1, REDUCE, 29}, },
			{{-1, ERROR, 2}, {33, SHIFT, 25}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 4}, {0, SHIFT, 1}, {19, SHIFT, 26}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 11}, },
			{{-1, ERROR, 5}, {33, SHIFT, 30}, },
			{{-1, ERROR, 6}, {0, SHIFT, 1}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 11}, },
			{{-1, ERROR, 7}, {20, SHIFT, 32}, },
			{{-1, ERROR, 8}, {11, SHIFT, 33}, },
			{{-1, ERROR, 9}, {0, SHIFT, 1}, {19, SHIFT, 26}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 11}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 20}, {1, SHIFT, 35}, {13, REDUCE, 27}, {14, REDUCE, 27}, },
			{{-1, ERROR, 12}, {34, ACCEPT, -1}, },
			{{-1, REDUCE, 106}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 5}, },
			{{-1, ERROR, 18}, {18, SHIFT, 36}, {25, SHIFT, 37}, },
			{{-1, ERROR, 19}, {13, SHIFT, 38}, {14, SHIFT, 39}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 1}, },
			{{-1, REDUCE, 0}, {0, SHIFT, 1}, {9, SHIFT, 2}, {20, SHIFT, 3}, {21, SHIFT, 4}, {22, SHIFT, 5}, {26, SHIFT, 6}, {27, SHIFT, 7}, {28, SHIFT, 8}, {31, SHIFT, 9}, {32, SHIFT, 10}, {33, SHIFT, 11}, },
			{{-1, ERROR, 25}, {5, SHIFT, 42}, {11, SHIFT, 43}, },
			{{-1, ERROR, 26}, {0, SHIFT, 1}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 11}, },
			{{-1, ERROR, 27}, {25, SHIFT, 46}, },
			{{-1, REDUCE, 13}, {15, SHIFT, 47}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 26}, },
			{{-1, ERROR, 31}, {25, SHIFT, 50}, },
			{{-1, ERROR, 32}, {25, SHIFT, 51}, },
			{{-1, ERROR, 33}, {33, SHIFT, 52}, },
			{{-1, ERROR, 34}, {25, SHIFT, 59}, },
			{{-1, ERROR, 35}, {0, SHIFT, 1}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 60}, },
			{{-1, ERROR, 36}, {0, SHIFT, 1}, {19, SHIFT, 26}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 11}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 40}, {0, SHIFT, 1}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 60}, },
			{{-1, REDUCE, 107}, },
			{{-1, ERROR, 42}, {33, SHIFT, 65}, },
			{{-1, REDUCE, 40}, {3, SHIFT, 66}, {4, SHIFT, 67}, {10, SHIFT, 68}, },
			{{-1, ERROR, 44}, {11, SHIFT, 76}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 47}, {0, SHIFT, 1}, {19, SHIFT, 26}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 11}, },
			{{-1, REDUCE, 108}, },
			{{-1, REDUCE, 14}, {15, SHIFT, 47}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 48}, {11, SHIFT, 79}, {20, SHIFT, 80}, },
			{{-1, ERROR, 53}, {12, SHIFT, 81}, },
			{{-1, REDUCE, 118}, },
			{{-1, ERROR, 55}, {33, SHIFT, 82}, },
			{{-1, REDUCE, 116}, },
			{{-1, REDUCE, 44}, {33, SHIFT, 83}, },
			{{-1, ERROR, 58}, {33, SHIFT, 52}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 27}, {1, SHIFT, 87}, },
			{{-1, ERROR, 61}, {2, SHIFT, 88}, },
			{{-1, REDUCE, 23}, {15, SHIFT, 89}, },
			{{-1, ERROR, 63}, {25, SHIFT, 92}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 66}, {23, SHIFT, 93}, {33, SHIFT, 94}, },
			{{-1, ERROR, 67}, {33, SHIFT, 97}, },
			{{-1, ERROR, 68}, {33, SHIFT, 99}, },
			{{-1, ERROR, 69}, {12, SHIFT, 100}, },
			{{-1, REDUCE, 112}, },
			{{-1, REDUCE, 120}, },
			{{-1, REDUCE, 114}, },
			{{-1, REDUCE, 41}, {3, SHIFT, 66}, {4, SHIFT, 67}, {10, SHIFT, 68}, },
			{{-1, REDUCE, 42}, {3, SHIFT, 66}, {10, SHIFT, 68}, },
			{{-1, ERROR, 75}, {3, SHIFT, 104}, {10, SHIFT, 68}, },
			{{-1, REDUCE, 40}, {3, SHIFT, 66}, {4, SHIFT, 67}, {10, SHIFT, 68}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 109}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 80}, {11, SHIFT, 119}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 82}, {17, SHIFT, 120}, },
			{{-1, ERROR, 83}, {11, SHIFT, 79}, {20, SHIFT, 80}, },
			{{-1, REDUCE, 117}, },
			{{-1, REDUCE, 119}, },
			{{-1, REDUCE, 45}, {33, SHIFT, 83}, },
			{{-1, ERROR, 87}, {0, SHIFT, 1}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 60}, },
			{{-1, REDUCE, 21}, {13, REDUCE, 31}, {14, REDUCE, 31}, },
			{{-1, ERROR, 89}, {0, SHIFT, 1}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 60}, },
			{{-1, REDUCE, 110}, },
			{{-1, REDUCE, 24}, {15, SHIFT, 89}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 48}, {1, REDUCE, 34}, },
			{{-1, ERROR, 95}, {1, SHIFT, 124}, },
			{{-1, ERROR, 96}, {23, SHIFT, 93}, {33, SHIFT, 125}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 98}, {33, SHIFT, 127}, },
			{{-1, REDUCE, 49}, {1, SHIFT, 128}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 113}, },
			{{-1, REDUCE, 43}, {3, SHIFT, 66}, {10, SHIFT, 68}, },
			{{-1, REDUCE, 115}, },
			{{-1, ERROR, 104}, {23, SHIFT, 93}, {33, SHIFT, 94}, },
			{{-1, REDUCE, 121}, },
			{{-1, ERROR, 106}, {12, SHIFT, 131}, },
			{{-1, ERROR, 107}, {33, SHIFT, 97}, },
			{{-1, ERROR, 108}, {33, SHIFT, 133}, },
			{{-1, ERROR, 109}, {33, SHIFT, 134}, },
			{{-1, REDUCE, 92}, },
			{{-1, ERROR, 111}, {11, SHIFT, 135}, },
			{{-1, REDUCE, 93}, {13, SHIFT, 136}, {25, SHIFT, 137}, {33, REDUCE, 48}, },
			{{-1, ERROR, 113}, {33, SHIFT, 138}, },
			{{-1, ERROR, 114}, {12, SHIFT, 139}, },
			{{-1, ERROR, 115}, {0, SHIFT, 1}, {6, SHIFT, 107}, {20, SHIFT, 140}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 141}, },
			{{-1, REDUCE, 122}, },
			{{-1, ERROR, 117}, {17, SHIFT, 144}, },
			{{-1, REDUCE, 69}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 121}, {2, SHIFT, 147}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 111}, },
			{{-1, ERROR, 124}, {2, SHIFT, 148}, {23, SHIFT, 149}, {33, SHIFT, 97}, },
			{{-1, REDUCE, 34}, },
			{{-1, ERROR, 126}, {1, SHIFT, 153}, },
			{{-1, ERROR, 127}, {17, SHIFT, 154}, },
			{{-1, ERROR, 128}, {2, SHIFT, 155}, {20, SHIFT, 156}, },
			{{-1, ERROR, 129}, {1, SHIFT, 158}, },
			{{-1, ERROR, 130}, {23, SHIFT, 93}, {33, SHIFT, 125}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 132}, {1, SHIFT, 160}, },
			{{-1, ERROR, 133}, {17, SHIFT, 161}, },
			{{-1, ERROR, 134}, {17, SHIFT, 162}, },
			{{-1, ERROR, 135}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {12, SHIFT, 163}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 137}, {23, SHIFT, 93}, {33, SHIFT, 125}, },
			{{-1, ERROR, 138}, {13, SHIFT, 166}, {17, SHIFT, 167}, },
			{{-1, REDUCE, 104}, },
			{{-1, REDUCE, 92}, {18, REDUCE, 28}, },
			{{-1, REDUCE, 93}, {1, SHIFT, 87}, {18, REDUCE, 27}, {25, SHIFT, 137}, },
			{{-1, ERROR, 142}, {18, SHIFT, 168}, },
			{{-1, ERROR, 143}, {17, SHIFT, 169}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 123}, },
			{{-1, ERROR, 146}, {12, SHIFT, 170}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 148}, {11, SHIFT, 171}, },
			{{-1, ERROR, 149}, {2, SHIFT, 172}, },
			{{-1, ERROR, 150}, {33, SHIFT, 173}, },
			{{-1, REDUCE, 101}, {15, SHIFT, 174}, },
			{{-1, ERROR, 152}, {2, SHIFT, 177}, {23, SHIFT, 178}, },
			{{-1, ERROR, 153}, {2, SHIFT, 179}, {23, SHIFT, 180}, {33, SHIFT, 97}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 94}, {15, SHIFT, 182}, },
			{{-1, ERROR, 157}, {2, SHIFT, 185}, },
			{{-1, ERROR, 158}, {2, SHIFT, 186}, {23, SHIFT, 187}, {33, SHIFT, 97}, },
			{{-1, ERROR, 159}, {1, SHIFT, 189}, },
			{{-1, ERROR, 160}, {2, SHIFT, 190}, {6, SHIFT, 107}, {20, SHIFT, 110}, {23, SHIFT, 191}, {33, SHIFT, 192}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 76}, {30, SHIFT, 195}, },
			{{-1, ERROR, 164}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {12, SHIFT, 198}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 165}, {1, SHIFT, 199}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 168}, {0, SHIFT, 1}, {19, SHIFT, 26}, {20, SHIFT, 3}, {22, SHIFT, 5}, {32, SHIFT, 10}, {33, SHIFT, 11}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 105}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 172}, {11, SHIFT, 202}, },
			{{-1, REDUCE, 100}, },
			{{-1, ERROR, 174}, {33, SHIFT, 97}, },
			{{-1, REDUCE, 130}, },
			{{-1, REDUCE, 102}, {15, SHIFT, 174}, },
			{{-1, ERROR, 177}, {11, SHIFT, 205}, },
			{{-1, ERROR, 178}, {2, SHIFT, 206}, },
			{{-1, ERROR, 179}, {11, SHIFT, 207}, },
			{{-1, ERROR, 180}, {2, SHIFT, 208}, },
			{{-1, ERROR, 181}, {2, SHIFT, 209}, {23, SHIFT, 210}, },
			{{-1, ERROR, 182}, {20, SHIFT, 211}, },
			{{-1, REDUCE, 126}, },
			{{-1, REDUCE, 95}, {15, SHIFT, 182}, },
			{{-1, REDUCE, 51}, },
			{{-1, ERROR, 186}, {11, SHIFT, 213}, },
			{{-1, ERROR, 187}, {2, SHIFT, 214}, },
			{{-1, ERROR, 188}, {2, SHIFT, 215}, {23, SHIFT, 216}, },
			{{-1, ERROR, 189}, {2, SHIFT, 217}, {23, SHIFT, 218}, {33, SHIFT, 97}, },
			{{-1, REDUCE, 84}, },
			{{-1, ERROR, 191}, {2, SHIFT, 220}, },
			{{-1, REDUCE, 93}, {25, SHIFT, 137}, },
			{{-1, REDUCE, 97}, {15, SHIFT, 221}, },
			{{-1, ERROR, 194}, {2, SHIFT, 224}, {23, SHIFT, 225}, },
			{{-1, ERROR, 195}, {1, SHIFT, 226}, },
			{{-1, REDUCE, 124}, },
			{{-1, REDUCE, 78}, {30, SHIFT, 195}, },
			{{-1, REDUCE, 77}, {30, SHIFT, 195}, },
			{{-1, ERROR, 199}, {2, SHIFT, 229}, {6, SHIFT, 107}, {20, SHIFT, 110}, {23, SHIFT, 230}, {33, SHIFT, 192}, },
			{{-1, ERROR, 200}, {17, SHIFT, 232}, },
			{{-1, ERROR, 201}, {12, SHIFT, 233}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, REDUCE, 103}, },
			{{-1, REDUCE, 131}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 206}, {11, SHIFT, 236}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 208}, {11, SHIFT, 238}, },
			{{-1, ERROR, 209}, {11, SHIFT, 239}, },
			{{-1, ERROR, 210}, {2, SHIFT, 240}, },
			{{-1, REDUCE, 96}, },
			{{-1, REDUCE, 127}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 214}, {11, SHIFT, 242}, },
			{{-1, ERROR, 215}, {11, SHIFT, 243}, },
			{{-1, ERROR, 216}, {2, SHIFT, 244}, },
			{{-1, ERROR, 217}, {11, SHIFT, 245}, },
			{{-1, ERROR, 218}, {2, SHIFT, 246}, },
			{{-1, ERROR, 219}, {2, SHIFT, 247}, {23, SHIFT, 248}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 221}, {6, SHIFT, 107}, {20, SHIFT, 110}, {33, SHIFT, 192}, },
			{{-1, REDUCE, 128}, },
			{{-1, REDUCE, 98}, {15, SHIFT, 221}, },
			{{-1, REDUCE, 85}, },
			{{-1, ERROR, 225}, {2, SHIFT, 251}, },
			{{-1, ERROR, 226}, {33, SHIFT, 97}, },
			{{-1, REDUCE, 125}, },
			{{-1, REDUCE, 79}, {30, SHIFT, 195}, },
			{{-1, REDUCE, 88}, },
			{{-1, ERROR, 230}, {2, SHIFT, 253}, },
			{{-1, ERROR, 231}, {2, SHIFT, 254}, {23, SHIFT, 255}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 52}, },
			{{-1, ERROR, 234}, {12, SHIFT, 256}, },
			{{-1, ERROR, 235}, {12, SHIFT, 257}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 237}, {12, SHIFT, 259}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 240}, {11, SHIFT, 262}, },
			{{-1, ERROR, 241}, {12, SHIFT, 263}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 244}, {11, SHIFT, 266}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 246}, {11, SHIFT, 268}, },
			{{-1, ERROR, 247}, {11, SHIFT, 269}, },
			{{-1, ERROR, 248}, {2, SHIFT, 270}, },
			{{-1, REDUCE, 99}, },
			{{-1, REDUCE, 129}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 252}, {33, SHIFT, 271}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 89}, },
			{{-1, ERROR, 255}, {2, SHIFT, 272}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 56}, },
			{{-1, ERROR, 258}, {12, SHIFT, 273}, },
			{{-1, REDUCE, 54}, },
			{{-1, ERROR, 260}, {12, SHIFT, 274}, },
			{{-1, ERROR, 261}, {12, SHIFT, 275}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, REDUCE, 53}, },
			{{-1, ERROR, 264}, {12, SHIFT, 277}, },
			{{-1, ERROR, 265}, {12, SHIFT, 278}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 267}, {12, SHIFT, 280}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 270}, {11, SHIFT, 283}, },
			{{-1, ERROR, 271}, {2, SHIFT, 284}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 276}, {12, SHIFT, 285}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 279}, {12, SHIFT, 286}, },
			{{-1, REDUCE, 55}, },
			{{-1, ERROR, 281}, {12, SHIFT, 287}, },
			{{-1, ERROR, 282}, {12, SHIFT, 288}, },
			{{-1, REDUCE, 68}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, ERROR, 284}, {11, SHIFT, 290}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 59}, },
			{{-1, ERROR, 289}, {12, SHIFT, 291}, },
			{{-1, ERROR, 290}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {12, SHIFT, 292}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 82}, },
			{{-1, ERROR, 293}, {6, SHIFT, 107}, {7, SHIFT, 108}, {8, SHIFT, 109}, {12, SHIFT, 294}, {20, SHIFT, 110}, {29, SHIFT, 111}, {33, SHIFT, 112}, },
			{{-1, REDUCE, 83}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 12}, },
			{{-1, 13}, {24, 41}, },
			{{-1, 14}, },
			{{-1, 15}, },
			{{-1, 16}, },
			{{-1, 17}, },
			{{-1, 27}, {9, 34}, {36, 63}, {168, 200}, },
			{{-1, 48}, {49, 78}, },
			{{-1, 40}, },
			{{-1, 28}, {47, 77}, },
			{{-1, 29}, {0, 18}, {6, 31}, {24, 18}, {26, 45}, },
			{{-1, 61}, {87, 121}, },
			{{-1, 90}, {91, 123}, },
			{{-1, 19}, {35, 62}, {40, 64}, {87, 62}, {89, 122}, {115, 142}, },
			{{-1, 20}, },
			{{-1, 21}, },
			{{-1, 95}, {96, 126}, {104, 129}, {130, 159}, {137, 165}, },
			{{-1, 22}, },
			{{-1, 23}, },
			{{-1, 44}, },
			{{-1, 69}, {76, 106}, },
			{{-1, 53}, },
			{{-1, 70}, {73, 101}, },
			{{-1, 54}, {58, 85}, },
			{{-1, 113}, {33, 55}, {58, 55}, {66, 96}, {67, 98}, {104, 130}, {107, 132}, {124, 150}, {153, 150}, {158, 150}, {174, 150}, {189, 150}, {226, 252}, },
			{{-1, 71}, {75, 105}, },
			{{-1, 72}, {74, 103}, {102, 103}, },
			{{-1, 114}, {119, 146}, {171, 201}, {202, 234}, {205, 235}, {207, 237}, {213, 241}, {236, 258}, {238, 260}, {239, 261}, {242, 264}, {243, 265}, {245, 267}, {262, 276}, {266, 279}, {268, 281}, {269, 282}, {283, 289}, },
			{{-1, 115}, },
			{{-1, 116}, {118, 145}, {164, 145}, {293, 145}, },
			{{-1, 196}, {197, 227}, {228, 227}, },
			{{-1, 117}, {115, 143}, {160, 193}, {199, 193}, {221, 249}, },
			{{-1, 157}, },
			{{-1, 183}, {184, 212}, },
			{{-1, 194}, {199, 231}, },
			{{-1, 222}, {223, 250}, },
			{{-1, 151}, {174, 203}, },
			{{-1, 152}, {153, 181}, {158, 188}, {189, 219}, },
			{{-1, 175}, {176, 204}, },
			{{-1, 56}, {57, 84}, {86, 84}, },
			{{-1, 24}, },
			{{-1, 49}, },
			{{-1, 91}, },
			{{-1, 73}, },
			{{-1, 74}, {73, 102}, },
			{{-1, 57}, {58, 86}, },
			{{-1, 58}, },
			{{-1, 75}, },
			{{-1, 118}, {135, 164}, {290, 293}, },
			{{-1, 197}, {198, 228}, },
			{{-1, 184}, },
			{{-1, 223}, },
			{{-1, 176}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: number, 'class', string literal, '?-', '?', 'declare', 'import', 'config', 'assert', bool, name",
			"expecting: ')', '=', '!=', ',', ';', ':-', '.'",
			"expecting: name",
			"expecting: number, '!', string literal, '?', bool, name",
			"expecting: number, string literal, '?', bool, name",
			"expecting: string literal",
			"expecting: '{'",
			"expecting: '(', '=', '!=', ',', ';', ':-', '.'",
			"expecting: EOF",
			"expecting: number, 'class', string literal, '?-', '?', 'declare', 'import', 'config', 'assert', bool, name, EOF",
			"expecting: ':-', '.'",
			"expecting: '=', '!='",
			"expecting: 'extends', '{'",
			"expecting: '.'",
			"expecting: ',', ';', '.'",
			"expecting: 'public', 'private', '@', '}'",
			"expecting: '{', string literal, name",
			"expecting: '}'",
			"expecting: '}', name",
			"expecting: '(', ')', ',', ';', ':-', '.'",
			"expecting: ')'",
			"expecting: ')', ','",
			"expecting: ',', ';', ':-', '.'",
			"expecting: '*', name",
			"expecting: 'public', '@'",
			"expecting: 'public', '@', '}'",
			"expecting: 'new', 'throw', 'return', '}', string literal, 'try', name",
			"expecting: ';'",
			"expecting: '{', string literal",
			"expecting: '=', '!=', ',', ';', ':-', '.'",
			"expecting: '('",
			"expecting: '(', '*', name",
			"expecting: '(', name",
			"expecting: '(', 'public', '@'",
			"expecting: ')', ',', ';', '*'",
			"expecting: '=', ';', '.', name",
			"expecting: number, 'new', string literal, '?', bool, name",
			"expecting: ')', '*', name",
			"expecting: ')', string literal",
			"expecting: '=', ';'",
			"expecting: ';', ':-'",
			"expecting: '(', ';', ':-', '.'",
			"expecting: ':-'",
			"expecting: ')', ',', ';', ':-', '.'",
			"expecting: ')', ',', '*'",
			"expecting: ')', '*'",
			"expecting: ')', 'new', string literal, '*', name",
			"expecting: 'new', 'throw', 'return', '}', string literal, 'try', 'catch', name",
			"expecting: ')', ',', '*', '.'",
			"expecting: 'new', string literal, name",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 1, 3, 2, 4, 5, 6, 3, 1, 7, 8, 9, 9, 9, 9, 9, 10, 11, 9, 9, 9, 9, 9, 12, 4, 13, 14, 14, 1, 13, 13, 2, 13, 4, 3, 9, 4, 4, 4, 9, 2, 15, 6, 14, 9, 3, 14, 14, 9, 9, 16, 17, 2, 2, 18, 18, 2, 9, 19, 20, 21, 13, 22, 6, 23, 2, 2, 17, 15, 24, 25, 15, 25, 24, 15, 14, 14, 26, 6, 9, 27, 28, 18, 2, 18, 4, 29, 4, 21, 21, 9, 30, 31, 30, 23, 32, 2, 33, 9, 15, 25, 25, 23, 24, 17, 2, 2, 2, 34, 6, 35, 2, 17, 36, 26, 27, 26, 26, 2, 20, 21, 21, 37, 30, 30, 27, 38, 30, 23, 9, 30, 27, 27, 26, 36, 23, 39, 18, 40, 41, 42, 27, 26, 26, 17, 43, 6, 20, 2, 44, 45, 37, 15, 24, 21, 20, 37, 30, 46, 26, 26, 47, 26, 30, 36, 26, 3, 26, 18, 26, 6, 44, 2, 44, 44, 6, 20, 6, 20, 45, 5, 21, 21, 24, 6, 20, 45, 37, 34, 20, 48, 44, 45, 30, 47, 47, 47, 46, 27, 17, 26, 44, 44, 26, 6, 26, 6, 6, 20, 21, 21, 26, 6, 6, 20, 6, 20, 45, 34, 49, 44, 44, 34, 20, 2, 47, 47, 34, 20, 45, 26, 25, 17, 17, 26, 17, 26, 26, 6, 17, 26, 26, 6, 26, 6, 6, 20, 44, 44, 34, 2, 34, 34, 20, 25, 25, 17, 25, 17, 17, 26, 25, 17, 17, 26, 17, 26, 26, 6, 20, 34, 25, 25, 25, 17, 25, 25, 17, 25, 17, 17, 26, 6, 25, 25, 25, 25, 17, 26, 25, 47, 26, 47, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
