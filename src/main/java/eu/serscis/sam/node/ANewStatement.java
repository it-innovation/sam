/* This file was generated by SableCC (http://www.sablecc.org/). */

package eu.serscis.sam.node;

import eu.serscis.sam.analysis.*;

@SuppressWarnings("nls")
public final class ANewStatement extends PStatement
{
    private PAssign _assign_;
    private PNewExpr _newExpr_;
    private TSemi _semi_;

    public ANewStatement()
    {
        // Constructor
    }

    public ANewStatement(
        @SuppressWarnings("hiding") PAssign _assign_,
        @SuppressWarnings("hiding") PNewExpr _newExpr_,
        @SuppressWarnings("hiding") TSemi _semi_)
    {
        // Constructor
        setAssign(_assign_);

        setNewExpr(_newExpr_);

        setSemi(_semi_);

    }

    @Override
    public Object clone()
    {
        return new ANewStatement(
            cloneNode(this._assign_),
            cloneNode(this._newExpr_),
            cloneNode(this._semi_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANewStatement(this);
    }

    public PAssign getAssign()
    {
        return this._assign_;
    }

    public void setAssign(PAssign node)
    {
        if(this._assign_ != null)
        {
            this._assign_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._assign_ = node;
    }

    public PNewExpr getNewExpr()
    {
        return this._newExpr_;
    }

    public void setNewExpr(PNewExpr node)
    {
        if(this._newExpr_ != null)
        {
            this._newExpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._newExpr_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._assign_)
            + toString(this._newExpr_)
            + toString(this._semi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._assign_ == child)
        {
            this._assign_ = null;
            return;
        }

        if(this._newExpr_ == child)
        {
            this._newExpr_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._assign_ == oldChild)
        {
            setAssign((PAssign) newChild);
            return;
        }

        if(this._newExpr_ == oldChild)
        {
            setNewExpr((PNewExpr) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
