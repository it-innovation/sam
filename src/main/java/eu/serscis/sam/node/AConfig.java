/* This file was generated by SableCC (http://www.sablecc.org/). */

package eu.serscis.sam.node;

import eu.serscis.sam.analysis.*;

@SuppressWarnings("nls")
public final class AConfig extends PConfig
{
    private TConfigTok _configTok_;
    private TLBrace _lBrace_;
    private PConfigBody _configBody_;
    private TRBrace _rBrace_;

    public AConfig()
    {
        // Constructor
    }

    public AConfig(
        @SuppressWarnings("hiding") TConfigTok _configTok_,
        @SuppressWarnings("hiding") TLBrace _lBrace_,
        @SuppressWarnings("hiding") PConfigBody _configBody_,
        @SuppressWarnings("hiding") TRBrace _rBrace_)
    {
        // Constructor
        setConfigTok(_configTok_);

        setLBrace(_lBrace_);

        setConfigBody(_configBody_);

        setRBrace(_rBrace_);

    }

    @Override
    public Object clone()
    {
        return new AConfig(
            cloneNode(this._configTok_),
            cloneNode(this._lBrace_),
            cloneNode(this._configBody_),
            cloneNode(this._rBrace_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAConfig(this);
    }

    public TConfigTok getConfigTok()
    {
        return this._configTok_;
    }

    public void setConfigTok(TConfigTok node)
    {
        if(this._configTok_ != null)
        {
            this._configTok_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._configTok_ = node;
    }

    public TLBrace getLBrace()
    {
        return this._lBrace_;
    }

    public void setLBrace(TLBrace node)
    {
        if(this._lBrace_ != null)
        {
            this._lBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lBrace_ = node;
    }

    public PConfigBody getConfigBody()
    {
        return this._configBody_;
    }

    public void setConfigBody(PConfigBody node)
    {
        if(this._configBody_ != null)
        {
            this._configBody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._configBody_ = node;
    }

    public TRBrace getRBrace()
    {
        return this._rBrace_;
    }

    public void setRBrace(TRBrace node)
    {
        if(this._rBrace_ != null)
        {
            this._rBrace_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rBrace_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._configTok_)
            + toString(this._lBrace_)
            + toString(this._configBody_)
            + toString(this._rBrace_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._configTok_ == child)
        {
            this._configTok_ = null;
            return;
        }

        if(this._lBrace_ == child)
        {
            this._lBrace_ = null;
            return;
        }

        if(this._configBody_ == child)
        {
            this._configBody_ = null;
            return;
        }

        if(this._rBrace_ == child)
        {
            this._rBrace_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._configTok_ == oldChild)
        {
            setConfigTok((TConfigTok) newChild);
            return;
        }

        if(this._lBrace_ == oldChild)
        {
            setLBrace((TLBrace) newChild);
            return;
        }

        if(this._configBody_ == oldChild)
        {
            setConfigBody((PConfigBody) newChild);
            return;
        }

        if(this._rBrace_ == oldChild)
        {
            setRBrace((TRBrace) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
