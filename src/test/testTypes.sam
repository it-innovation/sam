/////////////////////////////////////////////////////////////////////////
//
// Â© University of Southampton IT Innovation Centre, 2011
//
// Copyright in this library belongs to the University of Southampton
// University Road, Highfield, Southampton, UK, SO17 1BJ
//
// This software may not be used, sold, licensed, transferred, copied
// or reproduced in whole or in part in any manner or form or in or
// on any media by any person other than in accordance with the terms
// of the Licence Agreement supplied with the software, or otherwise
// without the prior written consent of the copyright owners.
//
// This software is distributed WITHOUT ANY WARRANTY, without even the
// implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
// PURPOSE, except where stated in the Licence Agreement supplied with
// the software.
//
//	Created By :			Thomas Leonard
//	Created Date :			2011-12-02
//	Created for Project :		SERSCIS
//
/////////////////////////////////////////////////////////////////////////
//
//  License : GNU Lesser General Public License, version 2.1
//
/////////////////////////////////////////////////////////////////////////

class Target {
    public void testBool(boolean x) { }
    public void testObject(Object x) { }
    public void testString(String x) { }
    public void testInt(int x) { }
    public void testValue(Value x) { }
    public void testCustom(Ref x) { }
}

config {
    test {
        Ref t = new Target();
        Ref unknown = new Unknown(t);
    }
}

assert local(<t>, "", "Target.testBool.x", any(boolean)).
assert !local(<t>, "", "Target.testBool.x", <t>).

assert local(<t>, "", "Target.testObject.x", <t>).
assert local(<t>, "", "Target.testObject.x", any(Value)).

assert local(<t>, "", "Target.testString.x", any(String)).
assert !local(<t>, "", "Target.testString.x", <t>).

assert local(<t>, "", "Target.testInt.x", any(int)).
assert !local(<t>, "", "Target.testInt.x", any(String)).

assert local(<t>, "", "Target.testValue.x", any(Value)).
assert !local(<t>, "", "Target.testInt.x", <t>).

assert local(<t>, "", "Target.testCustom.x", <t>).
assert !local(<t>, "", "Target.testCustom.x", any(Value)).


// Test type-checker
declare anObject(Object x).
declare aString(String x).
declare anotherString(String x).

anObject(?X) :- aString(?X).
anObject(?X) :- anObject(?X), !aString(?X).
anotherString(?X) :- anObject(?X), aString(?X).
