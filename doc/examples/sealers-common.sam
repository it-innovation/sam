/* Behaviour */

class Precious {
    public void use() {}
}

class Box {
  private Object precious;
  private Object myUnsealer;

  public Box(Unsealer unsealer, Object value) {
    precious = value;
    myUnsealer = unsealer;
  }
}

class Sealer {
  private Unsealer unsealer;

  public Sealer() {
    unsealer = new Unsealer();
  }

  public Box seal(Object value) {
    Box box = new Box(unsealer, value);
    return box;
  }

  public Unsealer getUnsealer() {
    return unsealer;
  }
}

class Unsealer {
  public Object unseal(Box box) {
    Object value;
    return value;
  }
}
local(?Unsealer, ?Invocation, "Unsealer.unseal.value", ?Value) :-
	isA(?Unsealer, "Unsealer"),
	local(?Unsealer, ?Invocation, "Unsealer.unseal.box", ?Box),
	field(?Box, "myUnsealer", ?Unsealer),
	field(?Box, "precious", ?Value).
