class Task {
  public void use() {
  }
}

class Factory {
  public Task newInstance() {
    Ref task = new Task();
    return task;
  }
}

config {
    Factory factory;

    setup {
        factory = new Factory();
    }

    test "A" {
        Object clientA = new Unknown(factory);
    }

    test "Other" {
        Object otherClients = new Unknown(factory);
    }
}

/* Aggregation */

newObject(<factory>, "A", "Task", <newTasksForA>).
newObject(<factory>, "Other", "Task", <newTasksOthers>).



/* Graphing */

//showInvocation(?Object, ?Invocation) :- live(?Object, ?Invocation).


/* Goals */

denyAccess(<otherClients>, <newTasksForA>).
requireAccess(<clientA>, <newTasksForA>).
