/* Behaviour */
class Factory {
  public Task newInstance() {
    Task task = new Task();
    return task;
  }
}

class Task extends Unknown {
}

/* Config */

initialObject("clientA", "Unknown").
initialObject("otherClients", "Unknown").
initialObject("factory", "Factory").

field("clientA", "ref", "factory").
field("otherClients", "ref", "factory").

initialInvocation("clientA", "a").
initialInvocation("otherClients", "other").

field("clientA", "ref", "otherClients").

/* Goals */

denyAccess("otherClients", "aTask").
requireAccess("clientA", "aTask").


/* (force SAM to find the obvious problem first) */
invocationObject("otherClients", "a", "Unknown.*-3", "other").

