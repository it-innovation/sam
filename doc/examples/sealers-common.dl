/* vim: set syntax=java : */

/* Behaviour */
class Sender {
  private Sealer sealer;
  private Object precious;
  private Object precious2;
  private Object others;
  private Object others2;

  public void test() {
    Box box1 = sealer.seal(precious);
    Box box2 = sealer.seal(precious2);
    others.accept(box1);
    others2.accept(box2);
  }
}

class Box {
  private Object precious;

  public Box(Object value) {
    precious = value;
  }
}

class Sealer {
  public Box seal(Object value) {
    Box box = new Box(value);
    return box;
  }
}

class Unsealer {
  public Object unseal(Box box) {
    Object value;
    return value;
  }
}
local(?Unsealer, ?Invocation, "Unsealer.unseal.value", ?Value) :-
	isA(?Unsealer, "Unsealer"),
	local(?Unsealer, ?Invocation, "Unsealer.unseal.box", ?Box),
	field(?Box, "precious", ?Value).

/* Config */
initialObject("sealer", "Sealer").
initialObject("unsealer", "Unsealer").

initialObject("sender", "Sender").

field("sender", "sealer", "sealer").

initialInvocation("sender", "A").
